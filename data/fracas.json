[
    {
        "id": "001",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "An Italian became the world's greatest tenor.",
            "ulf": "((An.d Italian.n)\n    ((past become.v)\n        (= (the.d ((poss-by (k world.n))\n            (greatest))))) \\.)"
        },
        "q": {
            "text": "Was there an Italian who became the world's greatest tenor?"
        },
        "h": {
            "text": "There was an Italian who became the world's greatest tenor.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "002",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every Italian man wants to be a great tenor.",
            "ulf": "(((Every.d (|Italian|.a man.n))\n    ((pres want.v) (to (be.v\n        (a.d (great.a tenor.n)))))) \\.)"
        },
        "p2": {
            "text": "Some Italian men are great tenors.",
            "ulf": "(((Some.d (|Italian|.a (plur man.n)))\n    ((pres be.v)\n        (great.a (plur tenor.n)))) \\.)"
        },
        "q": {
            "text": "Are there Italian men who want to be a great tenor?"
        },
        "h": {
            "text": "There are Italian men who want to be a great tenor.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (n+preds (|Italian|.a (plur man.n))\n        (who.rel\n            ((pres want.v) (to (be.v\n                (a.d (great.a tenor.n))))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "003",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All Italian men want to be a great tenor.",
            "ulf": "(((All.d (|Italian|.a (plur man.n)))\n    ((pres want.v) (to (be.v\n        (a.d (great.a tenor.n)))))) \\.)"
        },
        "p2": {
            "text": "Some Italian men are great tenors.",
            "ulf": "(((Some.d (|Italian|.a (plur man.n)))\n    ((pres be.v) (great.a (plur tenor.n)))) \\.)"
        },
        "q": {
            "text": "Are there Italian men who want to be a great tenor?"
        },
        "h": {
            "text": "There are Italian men who want to be a great tenor.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (n+preds (|Italian|.a (plur man.n))\n        (who.rel\n            ((pres want.v) (to (be.v\n                (a.d (great.a tenor.n))))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "004",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Each Italian tenor wants to be great.",
            "ulf": "(((Each.d (|Italian|.a tenor.n))\n    ((pres want.v) (to (be.v great.a)))) \\.)"
        },
        "p2": {
            "text": "Some Italian tenors are great.",
            "ulf": "(((Some.d (|Italian|.a (plur tenor.n)))\n    ((pres be.v) great.a)) \\.)"
        },
        "q": {
            "text": "Are there Italian tenors who want to be great?"
        },
        "h": {
            "text": "There are Italian tenors who want to be great.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (n+preds (|Italian|.a (plur tenor.n))\n        (who.rel ((pres want.v) (to (be.v great.a))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "005",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The really ambitious tenors are Italian.",
            "ulf": "(((The.d ((really.adv-a ambitious.a) (plur tenor.n)))\n    ((pres be.v) Italian.a)) \\.)"
        },
        "q": {
            "text": "Are there really ambitious tenors who are Italian?"
        },
        "h": {
            "text": "There are really ambitious tenors who are Italian.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds ((really.adv-a ambitious.a) (plur tenor.n))\n        (who.rel ((pres be.v) Italian.a))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "006",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "No really great tenors are modest.",
            "ulf": "(((No.d ((really.adv-a great.a) (plur tenor.n)))\n    ((pres be.v) modest.a)) \\.)"
        },
        "q": {
            "text": "Are there really great tenors who are modest?"
        },
        "h": {
            "text": "There are really great tenors who are modest.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds ((really.adv-a great.a) (plur tenor.n))\n        (who.rel ((pres be.v) modest.a))))) \\.)"
        },
        "a": "No",
        "group": "GQ"
    },
    {
        "id": "007",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Some great tenors are Swedish.",
            "ulf": "(((Some.d (great.a (plur tenor.n)))\n    ((pres be.v) Swedish.a)) \\.)"
        },
        "q": {
            "text": "Are there great tenors who are Swedish?"
        },
        "h": {
            "text": "There are great tenors who are Swedish.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres be.v) Swedish.a))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "008",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Many great tenors are German.",
            "ulf": "(((Many.d (great.a (plur tenor.n)))\n    ((pres be.v) German.a)) \\.)"
        },
        "q": {
            "text": "Are there great tenors who are German?"
        },
        "h": {
            "text": "There are great tenors who are German.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres be.v) German.a))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "009",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Several great tenors are British.",
            "ulf": "(((Several.d (great.a (plur tenor.n)))\n    ((pres be.v) British.a)) \\.)"
        },
        "q": {
            "text": "Are there great tenors who are British?"
        },
        "h": {
            "text": "There are great tenors who are British.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres be.v) British.a))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "010",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Most great tenors are Italian.",
            "ulf": "(((Most.d (great.a (plur tenor.n)))\n    ((pres be.v) Italian.a)) \\.)"
        },
        "q": {
            "text": "Are there great tenors who are Italian?"
        },
        "h": {
            "text": "There are great tenors who are Italian.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres be.v) Italian.a))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "011",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A few great tenors sing popular music.",
            "ulf": "(((A_few.d (great.a (plur (tenor.n))))\n    ((pres sing.v) (k (popular.a music.n)))) \\.)"
        },
        "p2": {
            "text": "Some great tenors like popular music.",
            "ulf": "(((Some.d (great.a (plur tenor.n)))\n    ((pres like.v) (k (popular.a music.n)))) \\.)"
        },
        "q": {
            "text": "Are there great tenors who sing popular music?"
        },
        "h": {
            "text": "There are great tenors who sing popular music.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres sing.v)\n            (k (popular.a music.n))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "012",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Few great tenors are poor.",
            "ulf": "(((Few.d (great.a (plur tenor.n)))\n    ((pres be.v) poor.a)) \\.)"
        },
        "q": {
            "text": "Are there great tenors who are poor?"
        },
        "h": {
            "text": "There are great tenors who are poor.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (great.a (plur tenor.n))\n        (who.rel ((pres be.v) poor.a))))) \\.)"
        },
        "a": "Not many",
        "group": "GQ"
    },
    {
        "id": "013",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Both leading tenors are excellent.",
            "ulf": "(((Both.d (leading.a (plur tenor.n)))\n    ((pres be.v) excellent.a)) \\.)"
        },
        "p2": {
            "text": "Leading tenors who are excellent are indispensable.",
            "ulf": "(((n+preds (leading.a (plur tenor.n))\n    (who.rel ((pres be.v) excellent.a)))\n    ((pres be.v) indispensable.a)) \\.)"
        },
        "q": {
            "text": "Are both leading tenors indispensable?"
        },
        "h": {
            "text": "Both leading tenors are indispensable.",
            "ulf": "(((Both.d (leading.a (plur tenor.n)))\n    ((pres be.v) indispensable.a)) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "014",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Neither leading tenor comes cheap.",
            "ulf": "(((Neither.d (leading.a tenor.n))\n    ((pres come.v) cheap.adv-a)) \\.)"
        },
        "p2": {
            "text": "One of the leading tenors is Pavarotti.",
            "ulf": "(((One.d (member-of.n (the.d (leading.a (plur tenor.n)))))\n    ((pres be.v) |Pavarotti|)) \\.)"
        },
        "q": {
            "text": "Is Pavarotti a leading tenor who comes cheap?"
        },
        "h": {
            "text": "Pavarotti is a leading tenor who comes cheap.",
            "ulf": "((|Pavarotti| ((pres be.v)\n    (n+preds (leading.a tenor.n)\n        (whol.rel ((pres come.v) cheap.adv-a))))) \\.)"
        },
        "a": "No",
        "group": "GQ"
    },
    {
        "id": "015",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "At least three tenors will take part in the concert.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur tenor.n))\n    ((pres will.aux-s) (take_part_in.v\n        (the.d concert.n)))) \\.)"
        },
        "q": {
            "text": "Are there tenors who will take part in the concert?"
        },
        "h": {
            "text": "There are tenors who will take part in the concert.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (plur tenor.n)\n        (who.rel ((pres will.aux-s) (take_part_in.v\n            (the.d concert.n))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "016",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "At most two tenors will contribute their fees to charity.",
            "ulf": "((((nquan (at_most.adv-a two.a)) (plur tenor.n))\n    ((pres will.aux-s) (contribute.v\n        (their.d (plur fee.n))\n        (adv-a (to.p (k charity.n)))))) \\.)"
        },
        "q": {
            "text": "Are there tenors who will contribute their fees to charity?"
        },
        "h": {
            "text": "There are tenors who will contribute their fees to charity.",
            "ulf": "((There.pro ((pres be.v)\n    (n+preds (plur tenor.n)\n        (who.rel ((pres will.aux-s) (contribute.v\n            (their.d (plur fee.n))\n            (adv-a (to.p (k charity.n))))))))) \\.)"
        },
        "a": "At most two",
        "group": "GQ"
    },
    {
        "id": "017",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "An Irishman won the Nobel prize for literature.",
            "ulf": "(((An.d Irishman.n)\n    ((past win.v)\n        (the.d (n+preds |Nobel prize|.n\n            (for.p (k literature.n)))))) \\.)"
        },
        "q": {
            "text": "Did an Irishman win a Nobel prize?"
        },
        "h": {
            "text": "An Irishman won a Nobel prize.",
            "ulf": "(((An.d Irishman.n)\n    ((past win.v)\n        (the.d |Nobel prize|.n))))"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "018",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every European has the right to live in Europe.",
            "ulf": "(((Every.d |European|.n)\n    ((pres have.v)\n        (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel ((pres have.v) (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|))))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Can every European travel freely within Europe?"
        },
        "h": {
            "text": "Every European can travel freely within Europe.",
            "ulf": "(((Every.d |European|.n) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "019",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All Europeans have the right to live in Europe.",
            "ulf": "(((All.d (plur |European|.n))\n   ((pres have.v)\n       (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Can all Europeans travel freely within Europe?"
        },
        "h": {
            "text": "All Europeans can travel freely within Europe.",
            "ulf": "(((All.d (plur |European|.n)) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "020",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Each European has the right to live in Europe.",
            "ulf": "(((Each.d |European|.n)\n    ((pres have.v)\n        (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Can each European travel freely within Europe?"
        },
        "h": {
            "text": "Each European can travel freely within Europe.",
            "ulf": "(((Each.d |European|.n) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "021",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The residents of member states have the right to live in Europe.",
            "ulf": "(((The.d (plur (resident-of.n (k (member.n (plur state.n))))))\n    ((pres have.v) (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "p2": {
            "text": "All residents of member states are individuals.",
            "ulf": "(((All.d (plur (resident-of.n (k (member.n (plur state.n))))))\n    ((pres be.v) (plur individual.n))) \\.)"
        },
        "p3": {
            "text": "Every individual who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds individual.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Can the residents of member states travel freely within Europe?"
        },
        "h": {
            "text": "The residents of member states can travel freely within Europe.",
            "ulf": "(((The.d (plur (resident-of.n (k (member.n (plur state.n))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "022",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "No delegate finished the report on time.",
            "ulf": "(((No.d delegate.n)\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did no delegate finish the report?"
        },
        "h": {
            "text": "No delegate finished the report.",
            "ulf": "(((No.d delegate.n)\n    ((past finish.v)\n        (the.d report.n))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "023",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Some delegates finished the survey on time.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survery.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did some delegates finish the survey?"
        },
        "h": {
            "text": "Some delegates finished the survey.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survey.n))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "024",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Many delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "q": {
            "text": "Did many delegates obtain results from the survey?"
        },
        "h": {
            "text": "Many delegates obtained results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (plur result.n))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "025",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Several delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "q": {
            "text": "Did several delegates get the results published?"
        },
        "h": {
            "text": "Several delegates got the results published.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))\n        published.a)) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "026",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Most Europeans are resident in Europe.",
            "ulf": "(((Most.d (plur |European|.n)) ((pres be.v)\n    (resident.a (adv-e (in.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "All Europeans are people.",
            "ulf": "(((All.d (plur |European|.n))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are resident in Europe can travel freely within Europe.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v)\n        (resident.a (adv-e (in.p |Europe|)))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Can most Europeans travel freely within Europe?"
        },
        "h": {
            "text": "Most Europeans can travel freely within Europe.",
            "ulf": "(((Most.d (plur |European|.n))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "027",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A few committee members are from Sweden.",
            "ulf": "(((A_few.d (committee.n (plur member.n)))\n    ((pres be.v) (from.p |Sweden|))) \\.)"
        },
        "p2": {
            "text": "All committee members are people.",
            "ulf": "(((All.d (committee.n (plur member.n)))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are from Sweden are from Scandinavia.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v)\n        (from.p |Sweden|)))))\n    ((pres be.v) (from.p |Scandinavia|))) \\.)"
        },
        "q": {
            "text": "Are at least a few committee members from Scandinavia?"
        },
        "h": {
            "text": "At least a few committee members are from Scandinavia.",
            "ulf": "((((nquan (At_least.adv-a a_few.a))\n      (committee.n (plur member.n)))\n    ((pres be.v) (from.p |Scandinavia|))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "028",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Few committee members are from Portugal.",
            "ulf": "(((Few.d (committee.n (plur member.n)))\n    ((pres be.v) (from.p |Portugal|))) \\.)"
        },
        "p2": {
            "text": "All committee members are people.",
            "ulf": "(((All.d (committee.n (plur member.n)))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are from Portugal are from southern Europe.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v)\n        (from.p |Portugal|)))))\n    ((pres be.v)\n        (from.p (southern.a |Europe|)))) \\.)"
        },
        "q": {
            "text": "Are there few committee members from southern Europe?"
        },
        "h": {
            "text": "There are few committee members from southern Europe.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (few.a (n+preds (committee.n (plur member.n))\n        (from.p (southern.a |Europe|)))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "029",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Both commissioners used to be leading businessmen.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (k leading.a (plur businessman.n)))))) \\.)"
        },
        "q": {
            "text": "Did both commissioners used to be businessmen?"
        },
        "h": {
            "text": "Both commissioners used to be businessmen.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (k plur businessman.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "030",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Neither commissioner spends a lot of time at home.",
            "ulf": "(((Neither.d commissioner.n)\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Does neither commissioner spend time at home?"
        },
        "h": {
            "text": "Neither commissioner spends time at home.",
            "ulf": "(((Neither.d commissioner.n)\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "031",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "At least three commissioners spend a lot of time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at least three commissioners spend time at home?"
        },
        "h": {
            "text": "At least three commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "032",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "At most ten commissioners spend a lot of time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at most ten commissioners spend time at home?"
        },
        "h": {
            "text": "At most ten commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "033",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "An Irishman won a Nobel prize.",
            "ulf": "(((An.d Irishman.n)\n    ((past win.v)\n        (the.d |Nobel prize|.n))))"
        },
        "q": {
            "text": "Did an Irishman win the Nobel prize for literature?"
        },
        "h": {
            "text": "An Irishman won the Nobel prize for literature.",
            "ulf": "(((An.d Irishman.n)\n    ((past win.v)\n        (the.d (n+preds |Nobel prize|.n\n            (for.p (k literature.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "034",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Every European can travel freely within Europe.",
            "ulf": "(((Every.d |European|.n) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Does every European have the right to live in Europe?"
        },
        "h": {
            "text": "Every European has the right to live in Europe.",
            "ulf": "(((Every.d |European|.n) \n    ((pres have.v) (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "035",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "All Europeans can travel freely within Europe.",
            "ulf": "(((All.d (plur |European|.n)) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Do all Europeans have the right to live in Europe?"
        },
        "h": {
            "text": "All Europeans have the right to live in Europe.",
            "ulf": "(((All.d (plur |European|.n)) \n    ((pres have.v) (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "036",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Each European can travel freely within Europe.",
            "ulf": "(((Every.d |European|.n) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every European is a person.",
            "ulf": "(((Every.d |European|.n) ((pres be.v) person.n)) \\.)"
        },
        "p3": {
            "text": "Every person who has the right to live in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds person.n\n    (who.rel (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Does each European have the right to live in Europe?"
        },
        "h": {
            "text": "Each European has the right to live in Europe.",
            "ulf": "(((Each.d |European|.n) \n    ((pres have.v) (the.d (n+preds right.n\n           (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "037",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The residents of member states can travel freely within Europe.",
            "ulf": "(((The.d (plur (resident-of.n (k (member.n (plur state.n))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "All residents of member states are individuals.",
            "ulf": "(((All.d (The.d (plur (resident-of.n\n     (k (member.n (plur state.n)))))))\n  ((pres be.v) (plur individual.n))) \\.)"
        },
        "p3": {
            "text": "Every individual who has the right to live anywhere in Europe can travel freely within Europe.",
            "ulf": "(((Every.d (n+preds individual.n\n    (who.rel ((pres have.v)\n       (the.d (n+preds right.n (to ((live.v anywhere.adv-e)\n          (adv-e (in.p |Europe|)))))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Do the residents of member states have the right to live anywhere in Europe?"
        },
        "h": {
            "text": "The residents of member states have the right to live anywhere in Europe.",
            "ulf": "(((The.d (plur (resident-of.n (k (member.n (plur state.n)))))) \n    ((pres have.v) (the.d (n+preds right.n\n           (to ((live.v anywhere.adv-e)\n              (adv-e (in.p |Europe|))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "038",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "No delegate finished the report.",
            "ulf": "(((No.d delegate.n)\n    ((past finish.v)\n        (the.d report.n))) \\.)"
        },
        "q": {
            "text": "Did any delegate finish the report on time?"
        },
        "h": {
            "text": "Some delegate finished the report on time.",
            "ulf": "(((Some.d delegate.n)\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "No",
        "group": "GQ"
    },
    {
        "id": "039",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Some delegates finished the survey.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survery.n))) \\.)"
        },
        "q": {
            "text": "Did some delegates finish the survey on time?"
        },
        "h": {
            "text": "Some delegates finished the survey on time.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survery.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "040",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Many delegates obtained results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (plur result.n))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "q": {
            "text": "Did many delegates obtain interesting results from the survey?"
        },
        "h": {
            "text": "Many delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "041",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Several delegates got the results published.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))"
        },
        "q": {
            "text": "Did several delegates get the results published in major national newspapers?"
        },
        "h": {
            "text": "Several delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "042",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Most Europeans can travel freely within Europe.",
            "ulf": "(((Most.d (plur |European|.n)) ((pres can.aux-v)\n    ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "All Europeans are people.",
            "ulf": "(((All.d (plur |European|.n))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are resident in Europe can travel freely within Europe.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v)\n        (resident.a (adv-e (in.p |Europe|)))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "q": {
            "text": "Are most Europeans resident in Europe?"
        },
        "h": {
            "text": "Most Europeans are resident in Europe.",
            "ulf": "(((Most.d (plur |European|.n)) ((pres be.v)\n    (resident.a (adv-e (in.p |Europe|))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "043",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "A few committee members are from Scandinavia.",
            "ulf": "(((A_few.d (committee.n (plur member.n)))\n    ((pres be.v) (from.p |Scandinavia|))) \\.)"
        },
        "p2": {
            "text": "All committee members are people.",
            "ulf": "(((All.d (committee.n (plur member.n)))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are from Sweden are from Scandinavia.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v) (from.p |Sweden|)))))\n    ((pres be.v) (from.p |Scandinavia|))) \\.)"
        },
        "q": {
            "text": "Are at least a few committee members from Sweden?"
        },
        "h": {
            "text": "At least a few committee members are from Sweden.",
            "ulf": "((((nquan (At_least.adv-a a_few.a))\n      (committee.n (plur member.n)))\n    ((pres be.v) (from.p |Sweden|))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "044",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Few committee members are from southern Europe.",
            "ulf": "(((Few.d (committee.n (plur member.n)))\n    ((pres be.v) (from.p (southern.a |Europe|)))) \\.)"
        },
        "p2": {
            "text": "All committee members are people.",
            "ulf": "(((All.d (committee.n (plur member.n)))\n    ((pres be.v) (plur person.n))) \\.)"
        },
        "p3": {
            "text": "All people who are from Portugal are from southern Europe.",
            "ulf": "(((All.d (n+preds (plur person.n)\n    (who.rel ((pres be.v) (from.p |Portugal|)))))\n    ((pres be.v) (from.p (southern.a |Europe|)))) \\.)"
        },
        "q": {
            "text": "Are there few committee members from Portugal?"
        },
        "h": {
            "text": "There are few committee members from Portugal.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (few.a (n+preds (committee.n (plur member.n))\n        (from.p |Portugal|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "045",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Both commissioners used to be businessmen.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (k plur businessman.n)))))) \\.)"
        },
        "q": {
            "text": "Did both commissioners used to be leading businessmen?"
        },
        "h": {
            "text": "Both commissioners used to be leading businessmen.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (k leading.a (plur businessman.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "046",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Neither commissioner spends time at home.",
            "ulf": "(((Neither.d commissioner.n)\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Does either commissioner spend a lot of time at home?"
        },
        "h": {
            "text": "One of the commissioners spends a lot of time at home.",
            "ulf": "(((One.d (member-of.n (the.d (plur commissioner.n))))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "No",
        "group": "GQ"
    },
    {
        "id": "047",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "At least three commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at least three commissioners spend a lot of time at home?"
        },
        "h": {
            "text": "At least three commissioners spend a lot of time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "048",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "At most ten commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at most ten commissioners spend a lot of time at home?"
        },
        "h": {
            "text": "At most ten commissioners spend a lot of time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "049",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A Swede won a Nobel prize.",
            "ulf": "(((A.d |Swede|.n) ((past win.v) (a.d |Nobel prize|.n))) \\.)"
        },
        "p2": {
            "text": "Every Swede is a Scandinavian.",
            "ulf": "(((Every.d |Swede|.n)\n    ((pres be.v) (a.d |Scandinavian|.n))) \\.)"
        },
        "q": {
            "text": "Did a Scandinavian win a Nobel prize?"
        },
        "h": {
            "text": "A Scandinavian won a Nobel prize.",
            "ulf": "(((A.d |Scandinavian|.n)\n    ((past win.v) (a.d |Nobel prize|.n))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "050",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Every Canadian resident can travel freely within Europe.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (a.d (resident-of.n\n        (the.d (|North American|.a continent.n)))))) \\.)"
        },
        "q": {
            "text": "Can every resident of the North American continent travel freely within Europe?"
        },
        "h": {
            "text": "Every resident of the North American continent can travel freely within Europe.",
            "ulf": "(((Every.d (resident-of.n\n    (the.d (|North American|.a continent.n))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "051",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "All Canadian residents can travel freely within Europe.",
            "ulf": "(((All.d (|Canadian|.a (plur resident.n)))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (resident-of.n\n        (the.d (|North American|.a continent.n))))) \\.)"
        },
        "q": {
            "text": "Can all residents of the North American continent travel freely within Europe?"
        },
        "h": {
            "text": "All residents of the North American continent can travel freely within Europe.",
            "ulf": "(((All.d (plur (resident-of.n\n    (the.d (|North American|.a continent.n)))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "052",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Each Canadian resident can travel freely within Europe.",
            "ulf": "(((Each.d (|Canadian|.a resident.n))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (resident-of.n\n        (the.d (|North American|.a continent.n))))) \\.)"
        },
        "q": {
            "text": "Can each resident of the North American continent travel freely within Europe?"
        },
        "h": {
            "text": "Each resident of the North American continent can travel freely within Europe.",
            "ulf": "(((Each.d (resident-of.n\n    (the.d (|North American|.a continent.n))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "053",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The residents of major western countries can travel freely within Europe.",
            "ulf": "(((The.d (plur (resident-of.n\n    (k (major.a (western.a (plur country.n)))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "All residents of major western countries are residents of western countries.",
            "ulf": "(((All.d (plur (resident-of.n\n    (k (major.a (western.a (plur country.n)))))))\n    ((pres be.v) (plur (resident-of.n\n        (k (western.a (plur country.n))))))) \\.)"
        },
        "q": {
            "text": "Do the residents of western countries have the right to live in Europe?"
        },
        "h": {
            "text": "The residents of western countries have the right to live in Europe.",
            "ulf": "(((The.d (plur (resident-of.n\n    (k (western.a (plur country.n))))))\n    ((pres have.v) (the.d (n+preds right.n\n        (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "054",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "No Scandinavian delegate finished the report on time.",
            "ulf": "(((No.d (Scandinavian.a delegate.n))\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did any delegate finish the report on time?"
        },
        "h": {
            "text": "Some delegate finished the report on time.",
            "ulf": "(((Some.d delegate.n)\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "055",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Some Irish delegates finished the survey on time.",
            "ulf": "(((Some.d (Irish.a (plur delegate.n)))\n    ((past finish.v)\n        (the.d survey.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did any delegates finish the survey on time?"
        },
        "h": {
            "text": "Some delegates finished the survey on time.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survey.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "056",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Many British delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (British.a (plur delegate.n)))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "q": {
            "text": "Did many delegates obtain interesting results from the survey?"
        },
        "h": {
            "text": "Many delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "057",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Several Portuguese delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (Portuguese.a (plur delegate.n)))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "q": {
            "text": "Did several delegates get the results published in major national newspapers?"
        },
        "h": {
            "text": "Several delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "058",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Most Europeans who are resident in Europe can travel freely within Europe.",
            "ulf": "((Most.d (n+preds (plur European.n) (who.rel\n    ((pres be.v) (n+preds resident.n (in.p |Europe|)))))\n    ((pres can.aux-s) ((travel.v freely.adv-a)\n        (within-arg.p |Europe|)))) \\.)"
        },
        "q": {
            "text": "Can most Europeans travel freely within Europe?"
        },
        "h": {
            "text": "Most Europeans can travel freely within Europe.",
            "ulf": "(((Most.d (plur European.n))\n    ((pres can.aux-s) ((travel.v freely.adv-a)\n        (within-arg.p |Europe|)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "059",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A few female committee members are from Scandinavia.",
            "ulf": "((((nquan (A.a few.a)) (female.a (committee.a (plur member.n))))\n    ((pres be.v) (adv-e (from.p |Scandinavia|)))) \\.)"
        },
        "q": {
            "text": "Are at least a few committee members from Scandinavia?"
        },
        "h": {
            "text": "At least a few committee members are from Scandinavia.",
            "ulf": "((((nquan (At_least.adv-a (a.a few.a))) (committee.a (plur member.n)))\n    ((pres be.v) (adv-e (from.p |Scandinavia|)))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "060",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Few female committee members are from southern Europe.",
            "ulf": "(((Few.d (female.a (committee.a (plur member.n))))\n    ((pres be.v) (adv-e (from.p (k (southern.a Europe.n)))))) \\.)"
        },
        "q": {
            "text": "Are few committee members from southern Europe?"
        },
        "h": {
            "text": "Few committee members are from southern Europe.",
            "ulf": "(((Few.d (committee.a (plur member.n)))\n    ((pres be.v) (adv-e (from.p (k (southern.a Europe.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "061",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Both female commissioners used to be in business.",
            "ulf": "(((Both.d (female.a (plur commissioner.n)))\n    ((past use.v) (to (be.v\n        (in-arg.p (k business.n)))))) \\.)"
        },
        "q": {
            "text": "Did both commissioners used to be in business?"
        },
        "h": {
            "text": "Both commissioners used to be in business.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (in-arg.p (k business.n)))))) \\.)"
        },
        "a": "Yes, if both commissioners are female; otherwise there are more than two commissioners.",
        "group": "GQ"
    },
    {
        "id": "062",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Neither female commissioner spends a lot of time at home.",
            "ulf": "(((Neither.d (female.a commissioner.n))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Does either commissioner spend a lot of time at home?"
        },
        "h": {
            "text": "One of the commissioners spends a lot of time at home.",
            "ulf": "(((One.d (member-of.n (the.d (plur commissioner.n))))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "No, if both commissioners are female; otherwise there are more than two commissioners.",
        "group": "GQ"
    },
    {
        "id": "063",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "At least three female commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (female.a (plur commissioner.n)))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at least three commissioners spend time at home?"
        },
        "h": {
            "text": "At least three commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "064",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "At most ten female commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (female.a (plur commissioner.n)))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at most ten commissioners spend time at home?"
        },
        "h": {
            "text": "At most ten commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "065",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "A Scandinavian won a Nobel prize.",
            "ulf": "(((A.d |Swede|.n) ((past win.v) (a.d |Nobel prize|.n))) \\.)"
        },
        "p2": {
            "text": "Every Swede is a Scandinavian.",
            "ulf": "(((Every.d |Swede|.n)\n    ((pres be.v) |Scandinavian|.n)) \\.)"
        },
        "q": {
            "text": "Did a Swede win a Nobel prize?"
        },
        "h": {
            "text": "A Swede won a Nobel prize.",
            "ulf": "(((A.d |Swede|.n) ((past win.v) (a.d |Nobel prize|.n))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "066",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every resident of the North American continent can travel freely within Europe.",
            "ulf": "(((Every.d (resident-of.n\n    (the.d (|North American|.a continent.n))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (resident-of.n\n        (the.d (|North American|.a continent.n))))) \\.)"
        },
        "q": {
            "text": "Can every Canadian resident travel freely within Europe?"
        },
        "h": {
            "text": "Every Canadian resident can travel freely within Europe.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "067",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All residents of the North American continent can travel freely within Europe.",
            "ulf": "(((All.d (plur (resident-of.n\n    (the.d (|North American|.a continent.n)))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (resident-of.n\n        (the.d (|North American|.a continent.n))))) \\.)"
        },
        "q": {
            "text": "Can all Canadian residents travel freely within Europe?"
        },
        "h": {
            "text": "All Canadian residents can travel freely within Europe.",
            "ulf": "(((All.d (|Canadian|.a (plur resident.n)))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "068",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Each resident of the North American continent can travel freely within Europe.",
            "ulf": "(((Each.d (resident-of.n\n    (the.d (|North American|.a continent.n))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "Every Canadian resident is a resident of the North American continent.",
            "ulf": "(((Every.d (|Canadian|.a resident.n))\n    ((pres be.v) (resident-of.n\n        (the.d (|North American|.a continent.n))))) \\.)"
        },
        "q": {
            "text": "Can each Canadian resident travel freely within Europe?"
        },
        "h": {
            "text": "Each Canadian resident can travel freely within Europe.",
            "ulf": "(((Each.d (|Canadian|.a resident.n))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "069",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The residents of western countries can travel freely within Europe.",
            "ulf": "(((The.d (plur (resident-of.n\n    (k (western.a (plur country.n))))))\n    ((pres can.aux-v) ((travel.v freely.adv-a)\n        (adv-e (within.p |Europe|))))) \\.)"
        },
        "p2": {
            "text": "All residents of major western countries are residents of western countries.",
            "ulf": "(((All.d (plur (resident-of.n\n    (k (major.a (western.a (plur country.n)))))))\n    ((pres be.v) (plur (resident-of.n\n        (k (western.a (plur country.n))))))) \\.)"
        },
        "q": {
            "text": "Do the residents of major western countries have the right to live in Europe?"
        },
        "h": {
            "text": "The residents of major western countries have the right to live in Europe.",
            "ulf": "(((The.d (plur (resident-of.n\n    (k (major.a (western.a (plur country.n)))))))\n    ((pres have.v) (the.d (n+preds right.n\n        (to (live.v (adv-e (in.p |Europe|)))))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "070",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "No delegate finished the report on time.",
            "ulf": "(((No.d delegate.n)\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did any Scandinavian delegate finish the report on time?"
        },
        "h": {
            "text": "Some Scandinavian delegate finished the report on time.",
            "ulf": "(((Some.d (Scandinavian.a delegate.n))\n    ((past finish.v)\n        (the.d report.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "No",
        "group": "GQ"
    },
    {
        "id": "071",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Some delegates finished the survey on time.",
            "ulf": "(((Some.d (plur delegate.n))\n    ((past finish.v)\n        (the.d survey.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "q": {
            "text": "Did any Irish delegates finish the survey on time?"
        },
        "h": {
            "text": "Some Irish delegates finished the survey on time.",
            "ulf": "(((Some.d (Irish.a (plur delegate.n)))\n    ((past finish.v)\n        (the.d survey.n)\n        (adv-e (on.p time.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "072",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Many delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (plur delegate.n))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "q": {
            "text": "Did many British delegates obtain interesting results from the survey?"
        },
        "h": {
            "text": "Many British delegates obtained interesting results from the survey.",
            "ulf": "(((Many.d (British.a) (plur delegate.n)))\n    ((past obtain.v)\n        (k (interesting.a (plur result.n)))\n        (adv-a (from.p (the.d survey.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "073",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Several delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (plur delegate.n))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "q": {
            "text": "Did several Portuguese delegates get the results published in major national newspapers?"
        },
        "h": {
            "text": "Several Portuguese delegates got the results published in major national newspapers.",
            "ulf": "(((Several.d (Portuguese.a (plur delegate.n)))\n    ((past get.v)\n        (the.d (plur result.n))\n        (published.a (adv-a (in.p\n            (major.a (national.a (plur newspaper.n)))))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "074",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Most Europeans can travel freely within Europe.",
            "ulf": "(((Most.d (plur European.n))\n    ((pres can.aux-s) ((travel.v freely.adv-a)\n        (within-arg.p |Europe|)))) \\.)"
        },
        "q": {
            "text": "Can most Europeans who are resident outside Europe travel freely within Europe?"
        },
        "h": {
            "text": "Most Europeans who are resident outside Europe can travel freely within Europe.",
            "ulf": "((Most.d (n+preds (plur European.n) (who.rel\n    ((pres be.v) (n+preds resident.n (outside.p |Europe|)))))\n    ((pres can.aux-s) ((travel.v freely.adv-a)\n        (within-arg.p |Europe|)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "075",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "A few committee members are from Scandinavia.",
            "ulf": "((((nquan (A.a few.a)) (committee.a (plur member.n)))\n    ((pres be.v) (adv-e (from.p |Scandinavia|)))) \\.)"
        },
        "q": {
            "text": "Are at least a few female committee members from Scandinavia?"
        },
        "h": {
            "text": "At least a few female committee members are from Scandinavia.",
            "ulf": "((((nquan (At_least.adv-a (a.a few.a)))\n    (female.a (committee.a (plur member.n))))\n    ((pres be.v) (adv-e (from.p |Scandinavia|)))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "076",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Few committee members are from southern Europe.",
            "ulf": "(((Few.d (committee.a (plur member.n)))\n    ((pres be.v) (adv-e (from.p (k (southern.a Europe.n)))))) \\.)"
        },
        "q": {
            "text": "Are few female committee members from southern Europe?"
        },
        "h": {
            "text": "Few female committee members are from southern Europe.",
            "ulf": "(((Few.d (female.a (committee.a (plur member.n))))\n    ((pres be.v) (adv-e (from.p (k (southern.a Europe.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "077",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Both commissioners used to be in business.",
            "ulf": "(((Both.d (plur commissioner.n))\n    ((past use.v) (to (be.v\n        (in-arg.p (k business.n)))))) \\.)"
        },
        "q": {
            "text": "Did both female commissioners used to be in business?"
        },
        "h": {
            "text": "Both female commissioners used to be in business.",
            "ulf": "(((Both.d (female.a (plur commissioner.n)))\n    ((past use.v) (to (be.v\n        (in-arg.p (k business.n)))))) \\.)"
        },
        "a": "Yes, if both commissioners are female; otherwise there are more than two commissioners.",
        "group": "GQ"
    },
    {
        "id": "078",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Neither commissioner spends a lot of time at home.",
            "ulf": "(((Neither.d commissioner.n)\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Does either female commissioner spend a lot of time at home?"
        },
        "h": {
            "text": "One of the female commissioners spends a lot of time at home.",
            "ulf": "(((One.d (member-of.n (the.d (female.a (plur commissioner.n)))))\n    ((pres spend.v)\n        (a.d (lot_of.a (k time.n)))\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "No, if both commissioners are female; otherwise there are more than two commissioners.",
        "group": "GQ"
    },
    {
        "id": "079",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "At least three commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at least three male commissioners spend time at home?"
        },
        "h": {
            "text": "At least three male commissioners spend time at home.",
            "ulf": "((((nquan (at_least.adv-a three.a)) (male.a (plur commissioner.n)))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "GQ"
    },
    {
        "id": "080",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "At most ten commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (plur commissioner.n))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "q": {
            "text": "Do at most ten female commissioners spend time at home?"
        },
        "h": {
            "text": "At most ten female commissioners spend time at home.",
            "ulf": "((((nquan (at_most.adv-a ten.a)) (female.a (plur commissioner.n)))\n    ((pres spend.v)\n        (k time.n)\n        (adv-e (at.p (k home.n))))) \\.)"
        },
        "a": "Yes",
        "group": "GQ"
    },
    {
        "id": "081",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith, Jones and Anderson signed the contract.",
            "ulf": "(((|Smith| \\, |Jones| and.cc |Anderson|)\n    ((past sign.v) (the.d contract.n))) \\.)"
        },
        "q": {
            "text": "Did Jones sign the contract?"
        },
        "h": {
            "text": "Jones signed the contract.",
            "ulf": "((|Jones| ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "082",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith, Jones and several lawyers signed the contract.",
            "ulf": "(((|Smith| \\, |Jones| and.cc (several.d (plur lawyer.n)))\n    ((past sign.v) (the.d contract.n))) \\.)"
        },
        "q": {
            "text": "Did Jones sign the contract?"
        },
        "h": {
            "text": "Jones signed the contract.",
            "ulf": "((|Jones| ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "083",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Either Smith, Jones or Anderson signed the contract.",
            "ulf": "(((|Smith| \\, |Jones| or.cc |Anderson|)\n    ((past sign.v) (the.d contract.n))) \\.)"
        },
        "q": {
            "text": "Did Jones sign the contract?"
        },
        "h": {
            "text": "Jones signed the contract.",
            "ulf": "((|Jones| ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "084",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Either Smith, Jones or Anderson signed the contract.",
            "ulf": "(((|Smith| \\, |Jones| or.cc |Anderson|)\n    ((past sign.v) (the.d contract.n))) \\.)"
        },
        "q": {
            "text": "If Smith and Anderson did not sign the contract, did Jones sign the contract?"
        },
        "h": {
            "text": "If Smith and Anderson did not sign the contract, Jones signed the contract.",
            "ulf": "(((If.md ((|Smith| and.cc |Anderson|)\n    (((past do.aux-s) not sign.v)\n        (the.d contract.n))))"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "085",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Exactly two lawyers and three accountants signed the contract.",
            "ulf": "(((Exactly.d ((two.a (plur lawyer.n))"
        },
        "q": {
            "text": "Did six lawyers sign the contract?"
        },
        "h": {
            "text": "Six lawyers signed the contract.",
            "ulf": "(((Six.d (plur lawyer.n)) ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "No",
        "group": "Plural"
    },
    {
        "id": "086",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Exactly two lawyers and three accountants signed the contract.",
            "ulf": "(((Exactly.d ((two.a (plur lawyer.n))"
        },
        "q": {
            "text": "Did six accountants sign the contract?"
        },
        "h": {
            "text": "Six accountants signed the contract.",
            "ulf": "(((Six.d (plur accountant.n)) ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "No",
        "group": "Plural"
    },
    {
        "id": "087",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Every representative and client was at the meeting.",
            "ulf": "(((Every.d (representative.n and.cc client.n) ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "q": {
            "text": "Was every representative at the meeting?"
        },
        "h": {
            "text": "Every representative was at the meeting.",
            "ulf": "(((Every.d representative.n ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Plural"
    },
    {
        "id": "088",
        "answer": "unknown",
        "nonstandard": true,
        "p1": {
            "text": "Every representative and client was at the meeting.",
            "ulf": "(((Every.d (representative.n and.cc client.n) ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "q": {
            "text": "Was every representative at the meeting?"
        },
        "h": {
            "text": "Every representative was at the meeting.",
            "ulf": "(((Every.d representative.n ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "a": "Don't know, on one reading",
        "group": "Plural"
    },
    {
        "id": "089",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every representative or client was at the meeting.",
            "ulf": "(((Every.d (representative.n or.cc client.n) ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "q": {
            "text": "Was every representative and every client at the meeting?"
        },
        "h": {
            "text": "Every representative and every client was at the meeting.",
            "ulf": "(((Every.d (representative.n and.cc client.n) ((past be.v)\n    (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "090",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The chairman read out the items on the agenda.",
            "ulf": "(((The.d chairman.n) ((past read_out.v)\n    (the.d (n+preds (plur item.n) (on.p (the.d agenda.n)))))) \\.)"
        },
        "q": {
            "text": "Did the chairman read out every item on the agenda?"
        },
        "h": {
            "text": "The chairman read out every item on the agenda.",
            "ulf": "(((The.d chairman.n) ((past read_out.v)\n    (every.d (n+preds item.n (on.p (the.d agenda.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "091",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The people who were at the meeting voted for a new chairman.",
            "ulf": "(((The.d (n+preds (plur person.n)\n    (who.rel ((past be.v)\n        (adv-a (at.p (the.d meeting.n)))))))\n    ((past vote.v)\n        (adv-a (for.p (a.d (new.a chairman.n)))))) \\.)"
        },
        "q": {
            "text": "Did everyone at the meeting vote for a new chairman?"
        },
        "h": {
            "text": "Everyone at the meeting voted for a new chairman.",
            "ulf": "(((n+preds Everyone.pro (at.p (the.d meeting.n)))\n    ((past vote.v)\n        (adv-a (for.p (a.d (new.a chairman.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "092",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All the people who were at the meeting voted for a new chairman.",
            "ulf": "()"
        },
        "q": {
            "text": "Did everyone at the meeting vote for a new chairman?"
        },
        "h": {
            "text": "Everyone at the meeting voted for a new chairman.",
            "ulf": "(((n+preds Everyone.pro (at.p (the.d meeting.n)))\n    ((past vote.v)\n        (adv-a (for.p (a.d (new.a chairman.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "093",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The people who were at the meeting all voted for a new chairman.",
            "ulf": "()"
        },
        "q": {
            "text": "Did everyone at the meeting vote for a new chairman?"
        },
        "h": {
            "text": "Everyone at the meeting voted for a new chairman.",
            "ulf": "(((n+preds Everyone.pro (at.p (the.d meeting.n)))\n    ((past vote.v)\n        (adv-a (for.p (a.d (new.a chairman.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "094",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The inhabitants of Cambridge voted for a Labour MP.",
            "ulf": "(((The.d (n+preds (plur inhabitant.n) (of.p |Cambridge|)))\n    ((past vote.v)\n        (adv-a (for.p (a.d (Labour.n MP.n)))))) \\.)"
        },
        "q": {
            "text": "Did every inhabitant of Cambridge vote for a Labour MP?"
        },
        "h": {
            "text": "Every inhabitant of Cambridge voted for a Labour MP.",
            "ulf": "(((Every.d (n+preds inhabitant.n (of.p |Cambridge|)))\n    ((past vote.v)\n        (adv-a (for.p (a.d (Labour.n MP.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "095",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The Ancient Greeks were noted philosophers.",
            "ulf": "(((The.d (Ancient.a (plur Greek.n)))\n    ((past be.v) (noted.a (plur philosopher.n)))) \\.)"
        },
        "q": {
            "text": "Was every Ancient Greek a noted philosopher?"
        },
        "h": {
            "text": "Every Ancient Greek was a noted philosopher.",
            "ulf": "(((Every.d (Ancient.a Greek.n))\n    ((past be.v) (noted.a (plur philosopher.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "096",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The Ancient Greeks were all noted philosophers.",
            "ulf": "()"
        },
        "q": {
            "text": "Was every Ancient Greek a noted philosopher?"
        },
        "h": {
            "text": "Every Ancient Greek was a noted philosopher.",
            "ulf": "(((Every.d (Ancient.a Greek.n))\n    ((past be.v) (noted.a (plur philosopher.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "097",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Software faults were blamed for the system failure.",
            "ulf": "(((Software.n (plur fault.n)) ((past (pasv blame.v))\n    (adv-a (for.p (the.d (system.n failure.n)))))) \\.)"
        },
        "q": {
            "text": "Was the system failure blamed on one or more software faults?"
        },
        "h": {
            "text": "The system failure was blamed on one or more software faults.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "098",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Software faults were blamed for the system failure.",
            "ulf": "(((k (software.n (plur fault.n))) ((past (pasv blame.v))\n    (adv-a (for.p (the.d (system.n failure.n)))))) \\.)"
        },
        "p2": {
            "text": "Bug # 32-985 is a known software fault.",
            "ulf": "((|Bug #32-985| ((pres be.v)\n    (known.a (software.n fault.n)))) \\.)"
        },
        "q": {
            "text": "Was Bug # 32-985 blamed for the system failure?"
        },
        "h": {
            "text": "Bug # 32-985 was blamed for the system failure.",
            "ulf": "((|Bug #32-985| ((past (pasv blame.v))\n    (adv-a (for.p (the.d (system.n failure.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "099",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Clients at the demonstration were all impressed by the system's performance.",
            "ulf": "((((plur Client.n) (adv-e (at.p (the.d demonstration.n))))\n    ((past (all.adv-s (pasv impress.v))) (by-iobj.p (the.d ((poss-by system.n) (performance-of.n *s)))))) \\.)"
        },
        "p2": {
            "text": "Smith was a client at the demonstration.",
            "ulf": "((|Smith| ((past be.v) (client.n\n    (adv-e (at.p (the.d demonstration.n)))))) \\.)"
        },
        "q": {
            "text": "Was Smith impressed by the system's performance?"
        },
        "h": {
            "text": "Smith was impressed by the system's performance.",
            "ulf": "((|Smith| ((past (pasv impress.v))\n    (by-iobj.p (the.d ((poss-by system.n) \n        (performance-of.n *s)))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "100",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Clients at the demonstration were impressed by the system's performance.",
            "ulf": "(((k (n+preds (plur Client.n) (at.p (the.d demonstration.n))))\n    (((past pasv) impress.v)\n        (adv-a (by.p (((the.d system.n) 's) performance.n))))) \\.)"
        },
        "q": {
            "text": "Were most clients at the demonstration impressed by the system's performance?"
        },
        "h": {
            "text": "Most clients at the demonstration were impressed by the system's performance.",
            "ulf": "(((Most.d (n+preds (plur Client.n) (at.p (the.d demonstration.n))))\n    (((past pasv) impress.v)\n        (adv-a (by.p (((the.d system.n) 's) performance.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "101",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "University graduates make poor stock-market traders.",
            "ulf": "(((k (University.n (plur graduate.n))) ((pres make.v)\n    (k (poor.a (stock-market.n (plur trader.n)))))) \\.)"
        },
        "p2": {
            "text": "Smith is a university graduate.",
            "ulf": "((|Smith| ((pres be.v) (university.n graduate.n))) \\.)"
        },
        "q": {
            "text": "Is Smith likely to make a poor stock market trader?"
        },
        "h": {
            "text": "Smith is likely to make a poor stock market trader.",
            "ulf": "((|Smith| (((pres be.v) likely.a)\n    (to (make.v (a.d (poor.a\n       ((stock.n market.n) trader.n))))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "102",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "University graduates make poor stock-market traders.",
            "ulf": "(((k (University.n (plur graduate.n))) ((pres make.v)\n    (k (poor.a (stock-market.n (plur trader.n)))))) \\.)"
        },
        "p2": {
            "text": "Smith is a university graduate.",
            "ulf": "((|Smith| ((pres be.v) (university.n graduate.n))) \\.)"
        },
        "q": {
            "text": "Will Smith make a poor stock market trader?"
        },
        "h": {
            "text": "Smith will make a poor stock market trader.",
            "ulf": "((|Smith| ((pres will.aux-s) (make.v (a.d (poor.a\n    ((stock.n market.n) trader.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "103",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All APCOM managers have company cars.",
            "ulf": "(((All.d (|APCOM|.n (plur manager.n)))\n    ((pres have.v) (k (company.n (plur car.n))))) \\.)"
        },
        "p2": {
            "text": "Jones is an APCOM manager.",
            "ulf": "((|Jones| ((pres be.v) (|APCOM|.n manager.n))) \\.)"
        },
        "q": {
            "text": "Does Jones have a company car?"
        },
        "h": {
            "text": "Jones has a company car.",
            "ulf": "((|Jones| ((pres have.v) (a.d (company.n car.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "104",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "All APCOM managers have company cars.",
            "ulf": "(((All.d (|APCOM|.n (plur manager.n)))\n    ((pres have.v) (k (company.n (plur car.n))))) \\.)"
        },
        "p2": {
            "text": "Jones is an APCOM manager.",
            "ulf": "((|Jones| ((pres be.v) (|APCOM|.n manager.n))) \\.)"
        },
        "q": {
            "text": "Does Jones have more than one company car?"
        },
        "h": {
            "text": "Jones has more than one company car.",
            "ulf": "((|Jones| ((pres have.v)\n    (more-than (k (one.a (company.n car.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Plural"
    },
    {
        "id": "105",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did no accountants attend the meeting?"
        },
        "h": {
            "text": "No accountants attended the meeting.",
            "ulf": "(((No.d (plur accountant.n))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "No",
        "group": "Plural"
    },
    {
        "id": "106",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did no accountant attend the meeting?"
        },
        "h": {
            "text": "No accountant attended the meeting.",
            "ulf": "(((No.d accountant.n)\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "No",
        "group": "Plural"
    },
    {
        "id": "107",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did any accountants attend the meeting?"
        },
        "h": {
            "text": "Some accountants attended the meeting.",
            "ulf": "(((Some.d (plur accountant.n))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "108",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did any accountant attend the meeting?"
        },
        "h": {
            "text": "Some accountant attended the meeting.",
            "ulf": "(((Some.d accountant.n)\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "109",
        "answer": "no",
        "nonstandard": true,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did some accountants attend the meeting?"
        },
        "h": {
            "text": "Some accountants attended the meeting.",
            "ulf": "(((Some.d (plur accountant.n))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "No, just one",
        "group": "Plural"
    },
    {
        "id": "110",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Just one accountant attended the meeting.",
            "ulf": "(((k ((nquan (Just.adv-a one.a)) (plur accountant.n)))\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did some accountant attend the meeting?"
        },
        "h": {
            "text": "Some accountant attended the meeting.",
            "ulf": "(((Some.d accountant.n)\n    ((past attend.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "111",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith signed one contract.",
            "ulf": "((|Smith| ((past sign.v) (k (one.a contract.n)))) \\.)"
        },
        "p2": {
            "text": "Jones signed another contract.",
            "ulf": "((|Jones| ((past sign.v) (another.d contract.n))) \\.)"
        },
        "q": {
            "text": "Did Smith and Jones sign two contracts?"
        },
        "h": {
            "text": "Smith and Jones signed two contracts.",
            "ulf": "(((|Smith| and.cc |Jones|) ((past sign.v)\n    (k (two.a (plur contract.n))))) \\.)"
        },
        "a": "Yes, on a collective/cumulative reading of the conclusion.",
        "group": "Plural"
    },
    {
        "id": "112",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith signed two contracts.",
            "ulf": "((|Smith| ((past sign.v) (k (two.a (plur contract.n))))) \\.)"
        },
        "p2": {
            "text": "Jones signed two contracts.",
            "ulf": "((|Jones| ((past sign.v) (k (two.a (plur contract.n))))) \\.)"
        },
        "q": {
            "text": "Did Smith and Jones sign two contracts?"
        },
        "h": {
            "text": "Smith and Jones signed two contracts.",
            "ulf": "(((|Smith| and.cc |Jones|) ((past sign.v)\n    (k (two.a (plur contract.n))))) \\.)"
        },
        "a": "Yes, on a distributive reading of \"Smith and Jones\".",
        "group": "Plural"
    },
    {
        "id": "113",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith signed two contracts.",
            "ulf": "((|Smith| ((past sign.v) (k (two.a (plur contract.n))))) \\.)"
        },
        "p2": {
            "text": "Jones also signed them.",
            "ulf": "((|Jones| also.adv-s ((past sign.v) them.pro)) \\.)"
        },
        "q": {
            "text": "Did Smith and Jones sign two contracts?"
        },
        "h": {
            "text": "Smith and Jones signed two contracts.",
            "ulf": "(((|Smith| and.cc |Jones|) ((past sign.v)\n    (k (two.a (plur contract.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Plural"
    },
    {
        "id": "114",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Mary used her workstation.",
            "ulf": "((|Mary| ((past use.v)\n    (the.d ((poss-by |Mary|) (workstation-of.n *s))))) \\.)"
        },
        "q": {
            "text": "Was Mary's workstation used?"
        },
        "h": {
            "text": "Mary's workstation was used.",
            "ulf": "((((|Mary| 's) (workstation-of.n *s))\n    ((past (pasv use.v)))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "115",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Mary used her workstation.",
            "ulf": "((|Mary| ((past use.v)\n    (the.d ((poss-by |Mary|) (workstation-of.n *s))))) \\.)"
        },
        "q": {
            "text": "Does Mary have a workstation?"
        },
        "h": {
            "text": "Mary has a workstation.",
            "ulf": "((|Mary| ((pres have.v) (a.d workstation.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "116",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Mary used her workstation.",
            "ulf": "((|Mary| ((past use.v)\n    (the.d ((poss-by |Mary|) (workstation-of.n *s))))) \\.)"
        },
        "q": {
            "text": "Is Mary female?"
        },
        "h": {
            "text": "Mary is female.",
            "ulf": "((|Mary| ((pres be.v) (k female.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "117",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every student used her workstation.",
            "ulf": "(((Every.d student.n) ((past use.v)\n    (her.d workstation.n))) \\.)"
        },
        "p2": {
            "text": "Mary is a student.",
            "ulf": "((|Mary| ((pres be.v) student.n)) \\.)"
        },
        "q": {
            "text": "Did Mary use her workstation?"
        },
        "h": {
            "text": "Mary used her workstation.",
            "ulf": "((|Mary| ((past use.v) (her.d workstation.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "118",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every student used her workstation.",
            "ulf": "(((Every.d student.n) ((past use.v)\n    (her.d workstation.n))) \\.)"
        },
        "p2": {
            "text": "Mary is a student.",
            "ulf": "((|Mary| ((pres be.v) student.n)) \\.)"
        },
        "q": {
            "text": "Does Mary have a workstation?"
        },
        "h": {
            "text": "Mary has a workstation.",
            "ulf": "((|Mary| ((pres have.v) (a.d workstation.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "119",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "No student used her workstation.",
            "ulf": "(((No.d student.n) ((past use.v)\n    (her.d workstation.n))) \\.)"
        },
        "p2": {
            "text": "Mary is a student.",
            "ulf": "((|Mary| ((pres be.v) student.n)) \\.)"
        },
        "q": {
            "text": "Did Mary use a workstation?"
        },
        "h": {
            "text": "Mary used a workstation.",
            "ulf": "((|Mary| ((past use.v) (a.d workstation.n))) \\.)"
        },
        "a": "No",
        "group": "Anaphora"
    },
    {
        "id": "120",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith attended a meeting.",
            "ulf": "((|Smith| ((past attend.v) (a.d meeting.n))) \\.)"
        },
        "p2": {
            "text": "She chaired it.",
            "ulf": "((She.pro ((past chair.v) it.pro)) \\.)"
        },
        "q": {
            "text": "Did Smith chair a meeting?"
        },
        "h": {
            "text": "Smith chaired a meeting.",
            "ulf": "((|Smith| ((past chair.v) (a.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "121",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith delivered a report to ITEL.",
            "ulf": "((|Smith| (((past deliver.v) (a.d report.n))\n           (adv-a (to.p |ITEL|)))) \\.)"
        },
        "p2": {
            "text": "She also delivered them an invoice.",
            "ulf": "((She.pro also.adv-s (((past deliver.v) them.pro)\n                      (an.d invoice.n))) \\.)"
        },
        "p3": {
            "text": "And she delivered them a project proposal.",
            "ulf": "(And.cc (she.pro ((past deliver.v) them.pro\n    (a.d (project.n proposal.n)))) \\.)"
        },
        "q": {
            "text": "Did Smith deliver a report, an invoice and a project proposal to ITEL?"
        },
        "h": {
            "text": "Smith delivered a report, an invoice and a project proposal to ITEL.",
            "ulf": "((|Smith| (((past deliever.v)\n    ((a.d report.n) \\, (an.d invoice.n) and.cc\n        (a.d (project.n proposal.n))))\n    (adv-a (to.p |ITEL|)))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "122",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every committee has a chairman.",
            "ulf": "(((Every.d committee.n) ((pres have.v) (a.d chairman.n))) \\.)"
        },
        "p2": {
            "text": "He is appointed its members.",
            "ulf": "((He.pro ((pres (pasv appoint.v))\n    (its.d (plur member.n)))) \\.)"
        },
        "q": {
            "text": "Does every committee have a chairman appointed by members of the committee?"
        },
        "h": {
            "text": "Every committee has a chairman appointed by members of the committee.",
            "ulf": "(((Every.d committee.n) ((pres have.v)\n    (a.d (n+preds chairman.n (appointed.a (by-iobj.p (k (plur (member-of.n (the.d committee.n)))))))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "123",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL has sent most of the reports Smith needs.",
            "ulf": "((|ITEL| ((pres perf) (send.v\n    (most.d (member-of.n (the.d\n       (n+preds (plur report.n)\n          (|Smith| (pres need.v))))))))) \\.)"
        },
        "p2": {
            "text": "They are on her desk.",
            "ulf": "((They.pro ((pres be.v) (on.p (her.d desk.n)))) \\.)"
        },
        "q": {
            "text": "Are there some reports from ITEL on Smith's desk?"
        },
        "h": {
            "text": "There are some reports from ITEL on Smith's desk.",
            "ulf": "((There.pro ((pres be-exist.v)\n    ((some.a (n+preds (plur report.n) (from.p |ITEL|)))\n     (adv-e (on.p (the.d ((poss-by |Smith|) desk.n))))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "124",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Two out of ten machines are missing.",
            "ulf": "((((fquan (= .2)) (plur machine.n))\n  ((pres be.v) missing.a)) \\.)"
        },
        "p2": {
            "text": "They have been removed.",
            "ulf": "((They.pro ((pres perf) (pasv remove.v))) \\.)"
        },
        "q": {
            "text": "Have two machines been removed?"
        },
        "h": {
            "text": "Two machines have been removed.",
            "ulf": "((((nquan two.a) (plur machine.n))\n  ((pres perf) (pasv remove.v))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "125",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Two out of ten machines are missing.",
            "ulf": "((((fquan (= .2)) (plur machine.n))\n  ((pres be.v) missing.a)) \\.)"
        },
        "p2": {
            "text": "They have been removed.",
            "ulf": "((They.pro ((pres perf) (pasv remove.v))) \\.)"
        },
        "q": {
            "text": "Have eight machines been removed?"
        },
        "h": {
            "text": "Eight machines have been removed.",
            "ulf": "((((nquan eight.a) (plur machine.n))\n  ((pres perf) (pasv remove.v))) \\.)"
        },
        "a": "Don't know",
        "group": "Anaphora"
    },
    {
        "id": "126",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Two out of ten machines are missing.",
            "ulf": "((((fquan (= .2)) (plur machine.n))\n  ((pres be.v) missing.a)) \\.)"
        },
        "p2": {
            "text": "They were all here yesterday.",
            "ulf": "((They.pro (past be.v) all.adv-s\n    (here.adv-e yesterday.adv-e)) \\.)"
        },
        "q": {
            "text": "Were ten machines here yesterday?"
        },
        "h": {
            "text": "Ten machines were here yesterday.",
            "ulf": "((((nquan ten.a) (plur machine.n)) (past be.v)\n    (here.adv-e yesterday.adv-e)) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "127",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith took a machine on Tuesday, and Jones took a machine on Wednesday.",
            "ulf": "((((|Smith| (((past take.v) (a.d machine.n))\n    (adv-e (on.p |Tuesday|)))) \\,) and.cc\n    (|Jones| (((past take.v) (a.d machine.n))\n       (adv-e (on.p |Wednesday|)))) \\.)"
        },
        "p2": {
            "text": "They put them in the lobby.",
            "ulf": "((They.pro (((past put.v) them.pro)\n    (adv-e (in.p (the.d lobby.n))))) \\.)"
        },
        "q": {
            "text": "Did Smith and Jones put two machines in the lobby?"
        },
        "h": {
            "text": "Smith and Jones put two machines in the lobby.",
            "ulf": "(((|Smith| and.cc |Jones|) (((past put.v)\n    ((nquan (= 2)) (plur machine.n)))\n    (adv-e (in.p (the.d lobby.n))))) \\.)"
        },
        "a": "Yes, on a distributive reading of the question.",
        "group": "Anaphora"
    },
    {
        "id": "128",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John and his colleagues went to a meeting.",
            "ulf": "(((|John| and.cc (his.d (plur (colleague-of.n *ref))))\n    ((past go.v) (a.d meeting.n))) \\.)"
        },
        "p2": {
            "text": "They hated it.",
            "ulf": "((They.pro ((past hate.v) it.pro)) \\.)"
        },
        "q": {
            "text": "Did John's colleagues hate the meeting?"
        },
        "h": {
            "text": "John's colleagues hated the meeting.",
            "ulf": "((((|John| 's) (plur (colleague-of.n *ref)))\n    ((past hate.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "129",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John and his colleagues went to a meeting.",
            "ulf": "(((|John| and.cc (his.d (plur (colleague-of.n *ref))))\n    ((past go.v) (a.d meeting.n))) \\.)"
        },
        "p2": {
            "text": "They hated it.",
            "ulf": "((They.pro ((past hate.v) it.pro)) \\.)"
        },
        "q": {
            "text": "Did John hate the meeting?"
        },
        "h": {
            "text": "John hated the meeting.",
            "ulf": "((|John| ((past hate.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes, on one possible reading",
        "group": "Anaphora"
    },
    {
        "id": "130",
        "answer": "unknown",
        "nonstandard": true,
        "p1": {
            "text": "John and his colleagues went to a meeting.",
            "ulf": "(((|John| and.cc (his.d (plur (colleague-of.n *ref))))\n    ((past go.v) (a.d meeting.n))) \\.)"
        },
        "p2": {
            "text": "They hated it.",
            "ulf": "((They.pro ((past hate.v) it.pro)) \\.)"
        },
        "q": {
            "text": "Did John hate the meeting?"
        },
        "h": {
            "text": "John hated the meeting.",
            "ulf": "((|John| ((past hate.v) (the.d meeting.n))) \\.)"
        },
        "a": "Don't know, on one possible reading",
        "group": "Anaphora"
    },
    {
        "id": "131",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Each department has a dedicated line.",
            "ulf": "(((each.d department.n) ((pres have.v)\n    (a.d (dedicated.adj line.n)))) \\.)"
        },
        "p2": {
            "text": "They rent them from BT.",
            "ulf": "((They.pro (((pres rent.v) them.pro)\n    (adv-a (from.p |BT|)))) \\.)"
        },
        "q": {
            "text": "Does every department rent a line from BT?"
        },
        "h": {
            "text": "Every department rents a line from BT.",
            "ulf": "(((Every.d department.n) (((pres rent.v) (a.d line.n))\n    (adv-a (from.p |BT|)))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "132",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Each department has a dedicated line.",
            "ulf": "(((each.d department.n) ((pres have.v)\n    (a.d (dedicated.adj line.n)))) \\.)"
        },
        "p2": {
            "text": "The sales department rents it from BT.",
            "ulf": "(((The.d ((plur sale.n) department.n))\n  (((pres rent.v) it.pro) (adv-a (from.p |BT|))) ) \\.)"
        },
        "q": {
            "text": "Does the sales department rent a line from BT?"
        },
        "h": {
            "text": "The sales department rents a line from BT.",
            "ulf": "(((The.d ((plur sale.n) department.n)) (((pres rent.v)\n    (a.d line.n)) (adv-a (from.p |BT|)))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "133",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "GFI owns several computers.",
            "ulf": "((|GFI| ((pres own.v)\n    ((nquan several.a) (plur computer.n)))) \\.)"
        },
        "p2": {
            "text": "ITEL maintains them.",
            "ulf": "((|ITEL| ((pres maintain.v) them.pro)) \\.)"
        },
        "q": {
            "text": "Does ITEL maintain all the computers that GFI owns?"
        },
        "h": {
            "text": "ITEL maintains all the computers that GFI owns.",
            "ulf": "((|ITEL| ((pres maintain.v)\n    (all.d (the.d (n+preds (plur computer.n)\n       (that.rel (|GFI| (pres own.v)))))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "134",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every customer who owns a computer has a service contract for it.",
            "ulf": "(((Every.d (n+preds customer.n (who.rel\n    ((pres own.v) (a.d computer.n)))))\n    ((pres have.v) ((a.d (service.n contract.n))\n        (adv-a (for.p it.pro))))) \\.)"
        },
        "p2": {
            "text": "MFI is a customer that owns exactly one computer.",
            "ulf": "((|MFI| ((pres be.v) (n+preds customer.n\n    (who.rel ((pres own.v)\n    ((fquan (exactly.adv-a one.a)) computer.n)))))) \\.)"
        },
        "q": {
            "text": "Does MFI have a service contract for all its computers?"
        },
        "h": {
            "text": "MFI has a service contract for all its computers.",
            "ulf": "((|MFI| ((pres have.v) ((a.d (service.n contract.n))\n    (adv-a (for.p (all.d\n       (its.d (plur computer-of.n *s)))))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "135",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every customer who owns a computer has a service contract for it.",
            "ulf": "(((Every.d (n+preds customer.n (who.rel\n    ((pres own.v) (a.d computer.n)))))\n    ((pres have.v) ((a.d (service.n contract.n))\n        (adv-a (for.p it.pro))))) \\.)"
        },
        "p2": {
            "text": "MFI is a customer that owns several computers.",
            "ulf": "((|MFI| ((pres be.v) (n+preds customer.n\n    (that.rel ((pres own.v)\n    ((nquan several.a) (plur computer.n))))))) \\.)"
        },
        "q": {
            "text": "Does MFI have a service contract for all its computers?"
        },
        "h": {
            "text": "MFI has a service contract for all its computers.",
            "ulf": "((|MFI| ((pres have.v) ((a.d (service.n contract.n))\n    (adv-a (for.p (all.d\n       (its.d (plur computer-of.n *s)))))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "136",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Every executive who had a laptop computer brought it to take notes at the meeting.",
            "ulf": "(((Every.d (n+preds executive.n (who.rel\n    ((past have.v) (a.d (laptop.n computer.n))))))\n    (((past bring.v) (it.pro)) (to (take.v (k (plur note.n))) \n       (adv-e (at.p (the.d meeting.n)))))) \\.)"
        },
        "p2": {
            "text": "Smith is a executive who owns five different laptop computers.",
            "ulf": "((|Smith| ((pres be.v) (n+preds executive.n\n    (who.rel ((pres own.v) ((nqual (= 5)) (different.a\n       (laptop.n (plur computer.n))))))))) \\.)"
        },
        "q": {
            "text": "Did Smith take five laptop computers to the meeting?"
        },
        "h": {
            "text": "Smith took five laptop computers to the meeting.",
            "ulf": "((|Smith| (((past take.v) ((nquan (= 5))\n    (laptop.n (plur computer.n))))\n       (adv-a (to.p (the.a meeting.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "Anaphora"
    },
    {
        "id": "137",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "There are 100 companies.",
            "ulf": "((There.pro ((pres be-exist.v)\n    ((nquan (= 100)) (plur company.n)))) \\.)"
        },
        "p2": {
            "text": "ICM is one of the companies and owns 150 computers.",
            "ulf": "((|ICM| (((pres be.v) (one.d (member-of.n\n    (the.d (plur company.n))))) and.cc\n       ((pres own.v) ((nquan (= 150))\n          (plur computer.n))))) \\.)"
        },
        "p3": {
            "text": "It does not have service contracts for any of its computers.",
            "ulf": "((It.pro ((pres do.aux-s) not (have.v\n    ((k (service.n (plur contract.n))) (adv-a (for.p\n       (any.d (member-of.n (the.d ((poss-by it.pro)\n          (plur computer.n))))))))))) \\.)"
        },
        "p4": {
            "text": "Each of the other 99 companies owns one computer.",
            "ulf": "(((Each.d (member-of.n (the.d (other.a\n    (99.a (plur company.n))))))\n    ((pres own.v) (k (one.a computer.n)))) \\.)"
        },
        "p5": {
            "text": "They have service contracts for them.",
            "ulf": "((They.pro ((pres have.v) ((k (service.n (plur contract.n)))\n    (adv-a (for.p them.pro))))) \\.)"
        },
        "q": {
            "text": "Do most companies that own a computer have a service contract for it?"
        },
        "h": {
            "text": "Most companies that own a computer have a service contract for it.",
            "ulf": "(((Most.d (n+preds (plur company.n) (that.rel\n    ((pres own.v) (a.d computer.n)))))\n    ((pres have.v) ((a.d (service.n contract.n))\n        (adv-a (for.p it.pro))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "138",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every report has a cover page.",
            "ulf": "(((Every.d report.n) ((pres have.v)\n    (a.d (cover.n page.n)))) \\.)"
        },
        "p2": {
            "text": "R-95-103 is a report.",
            "ulf": "((|R-95-103| ((pres be.v) report.n)) \\.)"
        },
        "p3": {
            "text": "Smith signed the cover page.",
            "ulf": "((|Smith| ((past sign.v) (the.d (cover.n page.n)))) \\.)"
        },
        "q": {
            "text": "Did Smith sign the cover page of R-95-103?"
        },
        "h": {
            "text": "Smith signed the cover page of R-95-103.",
            "ulf": "((|Smith| ((past sign.v)\n    (the.d (n+preds (cover.n page.n)\n       (of.p |R-95-103|))))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "139",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A company director awarded himself a large payrise.",
            "ulf": "(((A.d (company.a director.n)) ((past award.v)"
        },
        "q": {
            "text": "Has a company director awarded and been awarded a payrise?"
        },
        "h": {
            "text": "A company director has awarded and been awarded a payrise.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "140",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John said Bill had hurt himself.",
            "ulf": "((|John| ((past say.v) (tht"
        },
        "q": {
            "text": "Did John say Bill had been hurt?"
        },
        "h": {
            "text": "John said Bill had been hurt.",
            "ulf": "((|John| ((past say.v) (tht\n    |Bill| (((past perf) be.v) hurt.a)))) \\.)"
        },
        "a": "Yes",
        "group": "Anaphora"
    },
    {
        "id": "141",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John said Bill had hurt himself.",
            "ulf": "((|John| ((past say.v) (tht"
        },
        "q": {
            "text": "Did anyone say John had been hurt?"
        },
        "h": {
            "text": "Someone said John had been hurt.",
            "ulf": "((Someone.pro ((past say.v) (tht\n    |John| (((past perf) be.v) hurt.a)))) \\.)"
        },
        "a": "Don't know",
        "group": "Anaphora"
    },
    {
        "id": "142",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "So did Bill.",
            "ulf": "((adv-s (So.ps ((past do.aux-s) |Bill|"
        },
        "q": {
            "text": "Did Bill speak to Mary?"
        },
        "h": {
            "text": "Bill spoke to Mary.",
            "ulf": "((|Bill| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "143",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "So did Bill.",
            "ulf": "((adv-s (So.ps ((past do.aux-s) |Bill|"
        },
        "p3": {
            "text": "John spoke to Mary at four o'clock.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "q": {
            "text": "Did Bill speak to Mary at four o'clock?"
        },
        "h": {
            "text": "Bill spoke to Mary at four o'clock.",
            "ulf": "((|Bill| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "144",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary at four o'clock.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "p2": {
            "text": "So did Bill.",
            "ulf": "((adv-s (So.ps ((past do.aux-s) |Bill|"
        },
        "q": {
            "text": "Did Bill speak to Mary at four o'clock?"
        },
        "h": {
            "text": "Bill spoke to Mary at four o'clock.",
            "ulf": "((|Bill| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "145",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary at four o'clock.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "p2": {
            "text": "And Bill did at five o'clock.",
            "ulf": "((And.cc (|Bill| ((past do.aux-v)"
        },
        "q": {
            "text": "Did Bill speak to Mary at five o'clock?"
        },
        "h": {
            "text": "Bill spoke to Mary at five o'clock.",
            "ulf": "((|Bill| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (at.p (???))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "146",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John has spoken to Mary.",
            "ulf": "((|John| (((pres perf) speak.v)\n    (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "Bill is going to.",
            "ulf": "((|Bill| ((pres (prog go.v)) to)) \\.)"
        },
        "q": {
            "text": "Will Bill speak to Mary?"
        },
        "h": {
            "text": "Bill will speak to Mary.",
            "ulf": "((|Bill| (((pres will.aux-s) speak.v)\n    (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "147",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary on Monday.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (on.p |Monday|)))) \\.)"
        },
        "p2": {
            "text": "Bill didn't.",
            "ulf": "((|Bill| ((past do.aux-s) not)"
        },
        "q": {
            "text": "Did Bill speak to Mary on Monday?"
        },
        "h": {
            "text": "Bill spoke to Mary on Monday.",
            "ulf": "((|Bill| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (on.p |Monday|)))) \\.)"
        },
        "a": "No",
        "group": "Ellipsis"
    },
    {
        "id": "148",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Has John spoken to Mary?",
            "ulf": "(((pres perf) |John| (speak.v))\n    (adv-a (to.p |Mary|))) \\?)"
        },
        "p2": {
            "text": "Bill has.",
            "ulf": "((|Bill| (pres perf)) \\.)"
        },
        "q": {
            "text": "Has Bill spoken to Mary?"
        },
        "h": {
            "text": "Bill has spoken to Mary.",
            "ulf": "((|Bill| (((pres perf) speak.v)\n    (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "149",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John has spoken to Mary.",
            "ulf": "((|John| (((pres perf) speak.v)\n    (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "The students have too.",
            "ulf": "(((The.d (plur student.n))\n    (pres perf) {(speak.v (adv-a (to.p |Mary|)))}"
        },
        "q": {
            "text": "Have the students spoken to Mary?"
        },
        "h": {
            "text": "The students have spoken to Mary.",
            "ulf": "(((The.d (plur student.n))\n    (((pres perf) speak.v)\n       (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "150",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John went to Paris by car, and Bill by train.",
            "ulf": "(((|John| ((past go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k car.n)))))\n    \\, and.cc\n    (|Bill| ({(past go.v)\n        (adv-a (to.p |Paris|))}\n        (adv-a (by.p (k train.n)))))) \\.)"
        },
        "q": {
            "text": "Did Bill go to Paris by train?"
        },
        "h": {
            "text": "Bill went to Paris by train.",
            "ulf": "((|Bill| ((past go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k train.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "151",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John went to Paris by car, and Bill by train to Berlin.",
            "ulf": "(((|John| ((past go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k car.n)))))\n    \\, and.cc\n    (|Bill| ({(past go.v)}\n        (adv-a (by.p (k train.n)))\n        (adv-a (to.p |Berlin|))))) \\.)"
        },
        "q": {
            "text": "Did Bill go to Berlin by train?"
        },
        "h": {
            "text": "Bill went to Berlin by train.",
            "ulf": "((|Bill| ((past go.v)\n    (adv-a (to.p |Berlin|))\n    (adv-a (by.p (k train.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "152",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John went to Paris by car, and Bill to Berlin.",
            "ulf": "(((|John| ((past go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k car.n)))))\n    \\, and.cc\n    (|Bill| ({(past go.v)}\n        (adv-a (to.p |Berlin|))"
        },
        "q": {
            "text": "Did Bill go to Berlin by car?"
        },
        "h": {
            "text": "Bill went to Berlin by car.",
            "ulf": "((|Bill| ((past go.v)\n    (adv-a (to.p |Berlin|))\n    (adv-a (by.p (k car.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "153",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John is going to Paris by car, and the students by train.",
            "ulf": "(((|John| (((pres prog) go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k car.n)))))\n    \\, and.cc\n    ((the.d (plur student.n)) ({((pres prog) go.v)\n        (adv-a (to.p |Paris|))}\n        (adv-a (by.p (k train.n)))))) \\.)"
        },
        "q": {
            "text": "Are the students going to Paris by train?"
        },
        "h": {
            "text": "The students are going to Paris by train.",
            "ulf": "(((The.d (plur student.n)) (((pres prog) go.v)\n    (adv-a (to.p |Paris|))\n    (adv-a (by.p (k train.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "154",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John went to Paris by car.",
            "ulf": "((|John| (((past go.v) |Paris|)\n    (adv-a (k car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill by train.",
            "ulf": "((|Bill| (adv-a (k train.n))) \\.)"
        },
        "q": {
            "text": "Did Bill go to Paris by train?"
        },
        "h": {
            "text": "Bill went to Paris by train.",
            "ulf": "((|Bill| (((past go.v) |Paris|)\n    (adv-a (k train.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "155",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John owns a car.",
            "ulf": "((|John| ((pres own.v) (a.d car.n))) \\.)"
        },
        "p2": {
            "text": "Bill owns one too.",
            "ulf": "((|Bill| ((pres own.v)\n    (one.pro {ref1}.n)) too.adv-s) \\.)"
        },
        "q": {
            "text": "Does Bill own a car?"
        },
        "h": {
            "text": "Bill owns a car.",
            "ulf": "((|Bill| ((pres own.v) (a.d car.n))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "156",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John owns a car.",
            "ulf": "((|John| ((pres own.v) (a.d car.n))) \\.)"
        },
        "p2": {
            "text": "Bill owns one too.",
            "ulf": "((|Bill| ((pres own.v)\n    (one.pro {ref1}.n)) too.adv-s) \\.)"
        },
        "q": {
            "text": "Is there a car that John and Bill own?"
        },
        "h": {
            "text": "There is a car that John and Bill own.",
            "ulf": "((There.pro ((pres be-exist.v)\n    (n+preds car.n (that.rel ((|John| and.cc |Bill|)\n       (pres own.v)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "157",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John owns a red car.",
            "ulf": "((|John| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a blue one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (blue.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a blue car?"
        },
        "h": {
            "text": "Bill owns a blue car.",
            "ulf": "((|Bill| ((pres own.v) (a.d (blue.a car.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "158",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John owns a red car.",
            "ulf": "((|John| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a blue one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (blue.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a red car?"
        },
        "h": {
            "text": "Bill owns a red car.",
            "ulf": "((|Bill| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "159",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John owns a red car.",
            "ulf": "((|John| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a fast one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (fast.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a fast car?"
        },
        "h": {
            "text": "Bill owns a fast car.",
            "ulf": "((|Bill| ((pres own.v) (a.d (fast.a car.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "160",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John owns a red car.",
            "ulf": "((|John| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a fast one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (fast.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a fast red car?"
        },
        "h": {
            "text": "Bill owns a fast red car.",
            "ulf": "((|Bill| ((pres own.v) (a.d ((fast.a red.a) car.n)))) \\.)"
        },
        "a": "Yes, on one possible reading",
        "group": "Ellipsis"
    },
    {
        "id": "161",
        "answer": "unknown",
        "nonstandard": true,
        "p1": {
            "text": "John owns a red car.",
            "ulf": "((|John| ((pres own.v) (a.d (red.a car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a fast one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (fast.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a fast red car?"
        },
        "h": {
            "text": "Bill owns a fast red car.",
            "ulf": "((|Bill| ((pres own.v) (a.d ((fast.a red.a) car.n)))) \\.)"
        },
        "a": "Don't know, on one possible reading",
        "group": "Ellipsis"
    },
    {
        "id": "162",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John owns a fast red car.",
            "ulf": "((|John| ((pres own.v) (a.d ((fast.a red.a) car.n)))) \\.)"
        },
        "p2": {
            "text": "Bill owns a slow one.",
            "ulf": "((|Bill| ((pres own.v)\n    (a.d (slow.a one.pro)))) \\.)"
        },
        "q": {
            "text": "Does Bill own a slow red car?"
        },
        "h": {
            "text": "Bill owns a slow red car.",
            "ulf": "((|Bill| ((pres own.v) (a.d ((slow.a red.a) car.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "163",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "John had his paper accepted.",
            "ulf": "((|John| (((past have.v)\n    (the.d ((poss-by him.pro) paper.n)))"
        },
        "p2": {
            "text": "Bill doesn't know why.",
            "ulf": "((|Bill| ((pres do.aux-s) not (know.v why.pro))) \\.)"
        },
        "q": {
            "text": "Does Bill know why John had his paper accepted?"
        },
        "h": {
            "text": "Bill knows why John had his paper accepted.",
            "ulf": "((|Bill| ((pres know.v) (n+preds why.pro\n    (|John| (((past have.v) (the.d\n       ((poss-by him.pro) paper.n))) accepted.a))))) \\.)"
        },
        "a": "No",
        "group": "Ellipsis"
    },
    {
        "id": "164",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "And to Sue.",
            "ulf": "((And.cc (adv-a (to.p |Sue|))) \\.)"
        },
        "q": {
            "text": "Did John speak to Sue?"
        },
        "h": {
            "text": "John spoke to Sue.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Sue|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "165",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "p2": {
            "text": "On Friday.",
            "ulf": "((adv-e (on.p |Friday|)) \\.)"
        },
        "q": {
            "text": "Did John speak to Mary on Friday?"
        },
        "h": {
            "text": "John spoke to Mary on Friday.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (on.p |Friday|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "166",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John spoke to Mary on Thursday.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (on.p |Thursday|)))) \\.)"
        },
        "p2": {
            "text": "And on Friday.",
            "ulf": "((And.cc (adv-e (on.p |Friday|))) \\.)"
        },
        "q": {
            "text": "Did John speak to Mary on Friday?"
        },
        "h": {
            "text": "John spoke to Mary on Friday.",
            "ulf": "((|John| (((past speak.v) (adv-a (to.p |Mary|)))\n    (adv-e (on.p |Friday|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "167",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Twenty men work in the Sales Department.",
            "ulf": "((((nquan Twenty.a) (plur man.n))\n    ((pres work.v) (adv-e (in.p\n       (the.d |Sales Department|))))) \\.)"
        },
        "p2": {
            "text": "But only one woman.",
            "ulf": "((But.cc ((nquan (only.adv-a one.a))\n    (plur woman.n))) \\.)"
        },
        "q": {
            "text": "Do two women work in the Sales Department?"
        },
        "h": {
            "text": "Two women work in the Sales Department.",
            "ulf": "((((nquan Two.a) (plur woman.n))\n    ((pres work.v) (adv-e (in.p\n       (the.d |Sales Department|))))) \\.)"
        },
        "a": "No",
        "group": "Ellipsis"
    },
    {
        "id": "168",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Five men work part time.",
            "ulf": "((((nquan Five.a) (plur man.n))\n    ((pres work.v) part_time.adv-f)) \\.)"
        },
        "p2": {
            "text": "And forty five women.",
            "ulf": "((And.cc ((nquan Forty_five.a) (plur woman.n))) \\.)"
        },
        "q": {
            "text": "Do forty five women work part time?"
        },
        "h": {
            "text": "Forty five women work part time.",
            "ulf": "((((nquan Forty_five.a) (plur woman.n))\n    ((pres work.v) part_time.adv-f)) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "169",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John found Mary before Bill.",
            "ulf": "((|John| ((past find.v) |Mary|\n    (adv-e (before.ps\n        (|Bill| {((past find.v) |Mary|)}))))) \\.)"
        },
        "q": {
            "text": "Did John find Mary before Bill found Mary?"
        },
        "h": {
            "text": "John found Mary before Bill found Mary.",
            "ulf": "((|John| ((past find.v) |Mary|\n    (adv-e (before.ps\n        (|Bill| ((past find.v) |Mary|)))))) \\.)"
        },
        "a": "Yes, on one possible reading",
        "group": "Ellipsis"
    },
    {
        "id": "170",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John found Mary before Bill.",
            "ulf": "((|John| ((past find.v) |Mary|\n    (adv-e (before.ps\n        (|Bill| {((past find.v) |Mary|)}))))) \\.)"
        },
        "q": {
            "text": "Did John find Mary before John found Bill?"
        },
        "h": {
            "text": "John found Mary before John found Bill.",
            "ulf": "((|John| ((past find.v) |Mary|\n    (adv-e (before.ps\n        (|John| ((past find.v) |Bill|)))))) \\.)"
        },
        "a": "Yes, on one possible reading",
        "group": "Ellipsis"
    },
    {
        "id": "171",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John wants to know how many men work part time.",
            "ulf": "((|John| ((pres want.v) (to (know.v ( ??? ))))) \\.)"
        },
        "p2": {
            "text": "And women.",
            "ulf": "((And.cc (k (plur woman.n))) \\.)"
        },
        "q": {
            "text": "Does John want to know how many women work part time?"
        },
        "h": {
            "text": "John wants to know how many women work part time.",
            "ulf": "((|John| ((pres want.v) (to (know.v ( ??? ))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "172",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John wants to know how many men work part time, and which.",
            "ulf": "()"
        },
        "q": {
            "text": "Does John want to know which men work part time?"
        },
        "h": {
            "text": "John wants to know which men work part time.",
            "ulf": "((|John| ((pres want.v)\n    (to (know.v\n        (adv-a (which.ps\n            ((k (plur man.n)) ((pres work.v)\n                part_time.adv-a)))))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "173",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Bill spoke to everyone that John did.",
            "ulf": "((|Bill| ((past speak.v) (adv-a (to.p\n    (n+preds everyone.pro (that.rel\n       (|John| (past do.aux-v)))))))) \\.)"
        },
        "p2": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "q": {
            "text": "Did Bill speak to Mary?"
        },
        "h": {
            "text": "Bill spoke to Mary.",
            "ulf": "((|Bill| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "174",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Bill spoke to everyone that John did.",
            "ulf": "((|Bill| ((past speak.v) (adv-a (to.p\n    (n+preds everyone.pro (that.rel\n       (|John| (past do.aux-v)"
        },
        "p2": {
            "text": "Bill spoke to Mary.",
            "ulf": "((|Bill| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "q": {
            "text": "Did John speak to Mary?"
        },
        "h": {
            "text": "John spoke to Mary.",
            "ulf": "((|John| ((past speak.v) (adv-a (to.p |Mary|)))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "175",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John said Mary wrote a report, and Bill did too.",
            "ulf": "(((|John| ((past say.v)\n    (tht |Mary| ((past write.v)\n        (a.d report.n)))))\n    \\, and.cc\n    (|Bill| {((past say.v)\n        (tht |Mary| ((past write.v)\n            (a.d report.n))))} too.adv-s)) \\.)"
        },
        "q": {
            "text": "Did Bill say Mary wrote a report?"
        },
        "h": {
            "text": "Bill said Mary wrote a report.",
            "ulf": "((|Bill| ((past say.v)\n    (tht |Mary| ((past write.v)\n        (a.d report.n))))) \\.)"
        },
        "a": "Yes, on one possible reading/parse",
        "group": "Ellipsis"
    },
    {
        "id": "176",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John said Mary wrote a report, and Bill did too.",
            "ulf": "(((|John| ((past say.v)\n    (tht |Mary| ((past write.v)\n        (a.d report.n)))))\n    \\, and.cc\n    (|Bill| {((past say.v)\n        (tht |Mary| ((past write.v)\n            (a.d report.n))))} too.adv-s)) \\.)"
        },
        "q": {
            "text": "Did John say Bill wrote a report?"
        },
        "h": {
            "text": "John said Bill wrote a report.",
            "ulf": "((|John| ((past say.v)\n    (tht |Bill| ((past write.v)\n        (a.d report.n))))) \\.)"
        },
        "a": "Yes, on one possible reading/parse",
        "group": "Ellipsis"
    },
    {
        "id": "177",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John said that Mary wrote a report, and that Bill did too.",
            "ulf": "(((|John| ((past say.v)\n    (tht |Mary| ((past write.v)\n        (a.d report.n)))))"
        },
        "q": {
            "text": "Did Bill say Mary wrote a report?"
        },
        "h": {
            "text": "Bill said Mary wrote a report.",
            "ulf": "((|Bill| ((past say.v)\n    (tht |Mary| ((past write.v)\n        (a.d report.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "178",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John wrote a report, and Bill said Peter did too.",
            "ulf": "(((|John| ((past write.v) (a.d report.n)))\n    \\, and.cc\n    (|Bill| ((past say.v)\n        (tht |Peter| {((past write.v)\n            (a.d report.n))} too.adv-s)))) \\.)"
        },
        "q": {
            "text": "Did Bill say Peter wrote a report?"
        },
        "h": {
            "text": "Bill said Peter wrote a report.",
            "ulf": "((|Bill| ((past say.v)\n    (tht |Peter| ((past write.v)\n        (a.d report.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "179",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "If John wrote a report, then Bill did too.",
            "ulf": "(((adv-s (If.ps (|John|\n    ((past write.v) (a.d report.n))))) \\,\n (then.adv-s (|Bill| (past do.aux-v)"
        },
        "p2": {
            "text": "John wrote a report.",
            "ulf": "((|John| ((past write.v) (a.d report.n))) \\.)"
        },
        "q": {
            "text": "Did Bill write a report?"
        },
        "h": {
            "text": "Bill wrote a report.",
            "ulf": "((|Bill| ((past write.v) (a.d report.n))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "180",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John wanted to buy a car, and he did.",
            "ulf": "((|John| ((past want.v) (to (buy.v (a.d car.n))))"
        },
        "q": {
            "text": "Did John buy a car?"
        },
        "h": {
            "text": "John bought a car.",
            "ulf": "((|John| ((past buy.v)\n    (a.d car.n))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "181",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John needed to buy a car, and Bill did.",
            "ulf": "((|John| ((past need.v) (to (buy.v (a.d car.n))))"
        },
        "q": {
            "text": "Did Bill buy a car?"
        },
        "h": {
            "text": "Bill bought a car.",
            "ulf": "((|Bill| ((past buy.v)\n    (a.d car.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "182",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith represents his company and so does Jones.",
            "ulf": "(((|Smith| ((pres represent.v)\n    (the.d ((poss-by |Smith|) (company-of.n *s)))))\n    and.cc\n    ({(the.d ((poss-by |Smith|) (company-of.n *s)))}\n        ({((pres pasv) represent.v)}"
        },
        "q": {
            "text": "Does Jones represent Jones' company?"
        },
        "h": {
            "text": "Jones represents Jones' company.",
            "ulf": "((|Jones| ((pres represent.v)\n    (|Jones| 's) company.n)) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "183",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith represents his company and so does Jones.",
            "ulf": "(((|Smith| ((pres represent.v)\n    (the.d ((poss-by |Smith|) (company-of.n *s)))))\n    and.cc\n    ({(the.d ((poss-by |Smith|) (company-of.n *s)))}\n        ({((pres pasv) represent.v)}"
        },
        "q": {
            "text": "Does Jones represent Smith's company?"
        },
        "h": {
            "text": "Jones represents Smith's company.",
            "ulf": "((|Jones| ((pres represent.v)\n    (|Smith| 's) company.n)) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "184",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith represents his company and so does Jones.",
            "ulf": "(((|Smith| ((pres represent.v)\n    (the.d ((poss-by |Smith|) (company-of.n *s)))))\n    and.cc\n    ({(the.d ((poss-by |Smith|) (company-of.n *s)))}\n        ({((pres pasv) represent.v)}"
        },
        "q": {
            "text": "Does Smith represent Jones' company?"
        },
        "h": {
            "text": "Smith represents Jones' company.",
            "ulf": "((|Smith| ((pres represent.v)\n    (|Jones| 's) company.n)) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "185",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith claimed he had costed his proposal and so did Jones.",
            "ulf": "(((|Smith| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        (the.d ((poss-by he.pro) (proposal-of.n *s)))))))\n    and.cc\n    (|Jones| ((past claim.v)\n        (tht he.pro (((past perf) cost.v)\n            (the.d ((poss-by he.pro) (proposal-of.n *s)))))))) \\.)"
        },
        "q": {
            "text": "Did Jones claim he had costed his own proposal?"
        },
        "h": {
            "text": "Jones claimed he had costed his own proposal.",
            "ulf": "((|Jones| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        (the.d ((poss-by he.pro) (proposal-of.n *s))))))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "186",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith claimed he had costed his proposal and so did Jones.",
            "ulf": "(((|Smith| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        (the.d ((poss-by he.pro) (proposal-of.n *s)))))))\n    and.cc\n    (|Jones| ((past claim.v)\n        (tht he.pro (((past perf) cost.v)\n            (the.d ((poss-by he.pro) (proposal-of.n *s)))))))) \\.)"
        },
        "q": {
            "text": "Did Jones claim he had costed Smith's proposal?"
        },
        "h": {
            "text": "Jones claimed he had costed Smith's proposal.",
            "ulf": "((|Jones| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        ((|Smith| 's) proposal.n))))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "187",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith claimed he had costed his proposal and so did Jones.",
            "ulf": "(((|Smith| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        (the.d ((poss-by he.pro) (proposal-of.n *s)))))))\n    and.cc\n    (|Jones| ((past claim.v)\n        (tht he.pro (((past perf) cost.v)\n            (the.d ((poss-by he.pro) (proposal-of.n *s)))))))) \\.)"
        },
        "q": {
            "text": "Did Jones claim Smith had costed Smith's proposal?"
        },
        "h": {
            "text": "Jones claimed Smith had costed Smith's proposal.",
            "ulf": "((|Jones| ((past claim.v)\n    (tht |Smith| (((past perf) cost.v)\n        ((|Smith| 's) proposal.n))))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "188",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith claimed he had costed his proposal and so did Jones.",
            "ulf": "(((|Smith| ((past claim.v)\n    (tht he.pro (((past perf) cost.v)\n        (the.d ((poss-by he.pro) (proposal-of.n *s)))))))\n    and.cc\n    (|Jones| ((past claim.v)\n        (tht he.pro (((past perf) cost.v)\n            (the.d ((poss-by he.pro) (proposal-of.n *s)))))))) \\.)"
        },
        "q": {
            "text": "Did Jones claim Smith had costed Jones' proposal?"
        },
        "h": {
            "text": "Jones claimed Smith had costed Jones' proposal.",
            "ulf": "((|Jones| ((past claim.v)\n    (tht |Smith| (((past perf) cost.v)\n        ((|Jones| 's) proposal.n))))) \\.)"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "189",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John is a man and Mary is a woman.",
            "ulf": "(((|John| ((pres be.v) man.n)) and.cc\n  (|Mary| ((pres be.v) woman.n))) \\.)"
        },
        "p2": {
            "text": "John represents his company and so does Mary.",
            "ulf": "(((|John| ((pres represent.v)\n     (the.d ((poss-by him.pro) company.n)))) and.cc\n  (adv-s (so.ps ((pres do.aux-s) |Mary|"
        },
        "q": {
            "text": "Does Mary represent her own company?"
        },
        "h": {
            "text": "Mary represents her own company.",
            "ulf": "((|Mary| ((pres represent.v) (the.d\n    ((poss-by her.pro) (own.a company.n))))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "190",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John is a man and Mary is a woman.",
            "ulf": "(((|John| ((pres be.v) man.n)) and.cc\n  (|Mary| ((pres be.v) woman.n))) \\.)"
        },
        "p2": {
            "text": "John represents his company and so does Mary.",
            "ulf": "(((|John| ((pres represent.v)\n     (the.d ((poss-by him.pro) company.n)))) and.cc\n  (adv-s (so.ps ((pres do.aux-s) |Mary|"
        },
        "q": {
            "text": "Does Mary represent John's company?"
        },
        "h": {
            "text": "Mary represents John's company.",
            "ulf": "((|Mary| ((pres represent.v)\n    ((|John| 's) company.n))) \\.)"
        },
        "a": "Yes, on one reading",
        "group": "Ellipsis"
    },
    {
        "id": "191",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.",
            "ulf": "(((|Bill| ((past suggest.v)\n    (adv-a (to.p ((|Frank| 's) boss.n)))\n    (that they.pro (((pres should.aux-v) go.v)\n        (adv-a (to.p (the.d meeting.n)))"
        },
        "q": {
            "text": "If it was suggested that Bill and Frank should go together, was it suggested that Carl and Alan should go together?"
        },
        "h": {
            "text": "If it was suggested that Bill and Frank should go together, it was suggested that Carl and Alan should go together.",
            "ulf": "(((If.md (it.pro (((past pasv) suggest.v)\n    (that ((|Bill| and.cc |Frank|)\n        (((pres should.aux-v) go.v) together.adv-a))))))"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "192",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.",
            "ulf": "(((|Bill| ((past suggest.v)\n    (adv-a (to.p ((|Frank| 's) boss.n)))\n    (that they.pro (((pres should.aux-v) go.v)\n        (adv-a (to.p (the.d meeting.n)))"
        },
        "q": {
            "text": "If it was suggested that Bill and Frank should go together, was it suggested that Carl and Alan's wife should go together?"
        },
        "h": {
            "text": "If it was suggested that Bill and Frank should go together, it was suggested that Carl and Alan's wife should go together.",
            "ulf": "(((If.md (it.pro (((past pasv) suggest.v)\n    (that ((|Bill| and.cc |Frank|)\n        (((pres should.aux-v) go.v) together.adv-a))))))"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "193",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.",
            "ulf": "(((|Bill| ((past suggest.v)\n    (adv-a (to.p ((|Frank| 's) boss.n)))\n    (that they.pro (((pres should.aux-v) go.v)\n        (adv-a (to.p (the.d meeting.n)))"
        },
        "q": {
            "text": "If it was suggested that Bill and Frank's boss should go together, was it suggested that Carl and Alan's wife should go together?"
        },
        "h": {
            "text": "If it was suggested that Bill and Frank's boss should go together, it was suggested that Carl and Alan's wife should go together.",
            "ulf": "(((If.md (it.pro (((past pasv) suggest.v)\n    (that ((|Bill| and.cc ((|Frank| 's) boss.n))\n        (((pres should.aux-v) go.v) together.adv-a))))))"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "194",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.",
            "ulf": "(((|Bill| ((past suggest.v)\n    (adv-a (to.p ((|Frank| 's) boss.n)))\n    (that they.pro (((pres should.aux-v) go.v)\n        (adv-a (to.p (the.d meeting.n)))"
        },
        "q": {
            "text": "If it was suggested that Bill and Frank's boss should go together, was it suggested that Carl and Alan should go together?"
        },
        "h": {
            "text": "If it was suggested that Bill and Frank's boss should go together, it was suggested that Carl and Alan should go together.",
            "ulf": "(((If.md (it.pro (((past pasv) suggest.v)\n    (that ((|Bill| and.cc ((|Frank| 's) boss.n))\n        (((pres should.aux-v) go.v) together.adv-a))))))"
        },
        "a": "Don't know",
        "group": "Ellipsis"
    },
    {
        "id": "195",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.",
            "ulf": "(((|Bill| ((past suggest.v)\n    (adv-a (to.p ((|Frank| 's) boss.n)))\n    (that they.pro (((pres should.aux-v) go.v)\n        (adv-a (to.p (the.d meeting.n)))"
        },
        "q": {
            "text": "If it was suggested that Bill, Frank and Frank's boss should go together, was it suggested that Carl, Alan and Alan's wife should go together?"
        },
        "h": {
            "text": "If it was suggested that Bill, Frank and Frank's boss should go together, it was suggested that Carl, Alan and Alan's wife should go together.",
            "ulf": "(((If.md (it.pro (((past pasv) suggest.v)\n    (that ((|Bill| \\, |Frank| and.cc ((|Frank| 's) boss.n))\n        (((pres should.aux-v) go.v) together.adv-a))))))"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "196",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "A lawyer signed every report, and so did an auditor.",
            "ulf": "((((A.d lawyer.n) ((past sign.v)\n    (every.d report.n))) \\, and.cc\n  (adv-s (so.ps ((past do.aux-s) (an.d auditor.n)"
        },
        "p2": {
            "text": "That is, there was one lawyer who signed all the reports.",
            "ulf": "((That_is.adv-s \\, (there.pro ((past be-exist.v)\n    (one.a (n+preds lawyer.n (who.rel\n       ((past sign.v)\n        (all.d (the.d (plur report.n)))))))))) \\.)"
        },
        "q": {
            "text": "Was there one auditor who signed all the reports?"
        },
        "h": {
            "text": "There was one auditor who signed all the reports.",
            "ulf": "((There.pro ((past be-exist.v)\n    (one.a (n+preds auditor.n (who.rel\n       ((past sign.v)\n        (all.d (the.d (plur report.n))))))))) \\.)"
        },
        "a": "Yes",
        "group": "Ellipsis"
    },
    {
        "id": "197",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John has a genuine diamond.",
            "ulf": "((|John| ((pres have.v)\n    (a.d (genuine.a diamond.n)))) \\.)"
        },
        "q": {
            "text": "Does John have a diamond?"
        },
        "h": {
            "text": "John has a diamond.",
            "ulf": "((|John| ((pres have.v)\n    (a.d diamond.n))) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "198",
        "answer": "no",
        "nonstandard": true,
        "p1": {
            "text": "John is a former university student.",
            "ulf": "((|John| ((pres be.v)\n    (former.a (universirty.a student.n)))) \\.)"
        },
        "q": {
            "text": "Is John a university student?"
        },
        "h": {
            "text": "John is a university student.",
            "ulf": "((|John| ((pres be.v)\n    (universirty.a student.n))) \\.)"
        },
        "a": "No / don't know",
        "group": "Adjective"
    },
    {
        "id": "199",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "John is a successful former university student.",
            "ulf": "((|John| ((pres be.v)\n    (successful.a (former.a (universirty.a student.n))))) \\.)"
        },
        "q": {
            "text": "Is John successful?"
        },
        "h": {
            "text": "John is successful.",
            "ulf": "((|John| ((pres be.v)\n    successful.a)) \\.)"
        },
        "a": "Yes (for a former university student)",
        "group": "Adjective"
    },
    {
        "id": "200",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John is a former successful university student.",
            "ulf": "((|John| ((pres be.v)\n    (former.a (successful.a (universirty.a student.n))))) \\.)"
        },
        "q": {
            "text": "Is John successful?"
        },
        "h": {
            "text": "John is successful.",
            "ulf": "((|John| ((pres be.v)\n    successful.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "201",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John is a former successful university student.",
            "ulf": "((|John| ((pres be.v)\n    (former.a (successful.a (universirty.a student.n))))) \\.)"
        },
        "q": {
            "text": "Is John a university student?"
        },
        "h": {
            "text": "John is a university student.",
            "ulf": "((|John| ((pres be.v)\n    (universirty.a student.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "202",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every mammal is an animal.",
            "ulf": "(((Every.d mammal.n) ((pres be.v)"
        },
        "q": {
            "text": "Is every four-legged mammal a four-legged animal?"
        },
        "h": {
            "text": "Every four-legged mammal is a four-legged animal.",
            "ulf": "(((Every.d (four-legged.a mammal.n)) ((pres be.v)\n    (four-legged.a animal.n))) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "203",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Dumbo is a four-legged animal.",
            "ulf": "((|Dumbo| ((pres be.v)\n    (four-legged.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Dumbo four-legged?"
        },
        "h": {
            "text": "Dumbo is four-legged.",
            "ulf": "((|Dumbo| ((pres be.v)\n    four-legged.a)) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "204",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Mickey is a small animal.",
            "ulf": "((|Mickey| ((pres be.v)\n    (small.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Mickey a large animal?"
        },
        "h": {
            "text": "Mickey is a large animal.",
            "ulf": "((|Mickey| ((pres be.v)\n    (large.a animal.n))) \\.)"
        },
        "a": "No",
        "group": "Adjective"
    },
    {
        "id": "205",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Dumbo is a large animal.",
            "ulf": "((|Dumbo| ((pres be.v)\n    (large.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Dumbo a small animal?"
        },
        "h": {
            "text": "Dumbo is a small animal.",
            "ulf": "((|Dumbo| ((pres be.v)\n    (small.a animal.n))) \\.)"
        },
        "a": "No",
        "group": "Adjective"
    },
    {
        "id": "206",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Fido is not a small animal.",
            "ulf": "((|Fido| ((pres be.v) not\n    (small.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Fido a large animal?"
        },
        "h": {
            "text": "Fido is a large animal.",
            "ulf": "((|Fido| ((pres be.v)\n    (large.a animal.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "207",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Fido is not a large animal.",
            "ulf": "((|Fido| ((pres be.v) not\n    (large.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Fido a small animal?"
        },
        "h": {
            "text": "Fido is a small animal.",
            "ulf": "((|Fido| ((pres be.v)\n    (small.a animal.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "208",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Mickey is a small animal.",
            "ulf": "((|Mickey| ((pres be.v) (small.a animal.n))) \\.)"
        },
        "p2": {
            "text": "Dumbo is a large animal.",
            "ulf": "((|Dumbo| ((pres be.v) (large.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Mickey smaller than Dumbo?"
        },
        "h": {
            "text": "Mickey is smaller than Dumbo.",
            "ulf": "(((|Mickey| (pres be.v) (degree1 small.a))\n less-than (|Dumbo| (pres be.v) (degree2 small.a))) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "209",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Mickey is a small animal.",
            "ulf": "((|Mickey| ((pres be.v) (small.a animal.n))) \\.)"
        },
        "p2": {
            "text": "Dumbo is a large animal.",
            "ulf": "((|Dumbo| ((pres be.v) (large.a animal.n))) \\.)"
        },
        "q": {
            "text": "Is Mickey larger than Dumbo?"
        },
        "h": {
            "text": "Mickey is larger than Dumbo.",
            "ulf": "(((|Mickey| (pres be.v) (degree1 large.a))\n more-than (|Dumbo| (pres be.v) (degree2 large.a))) \\.)"
        },
        "a": "No",
        "group": "Adjective"
    },
    {
        "id": "210",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "All mice are small animals.",
            "ulf": "(((All.d (plur mouse.n)) ((pres be.v)\n    (small.a (plur animal.n)))) \\.)"
        },
        "p2": {
            "text": "Mickey is a large mouse.",
            "ulf": "((|Mickey| ((pres be.v) (large.a mouse.n))) \\.)"
        },
        "q": {
            "text": "Is Mickey a large animal?"
        },
        "h": {
            "text": "Mickey is a large animal.",
            "ulf": "((|Mickey| ((pres be.v) (large.a animal.n))) \\.)"
        },
        "a": "No",
        "group": "Adjective"
    },
    {
        "id": "211",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "All elephants are large animals.",
            "ulf": "(((All.d (plur elephant.n)) ((pres be.v)\n    (large.a (plur animal.n)))) \\.)"
        },
        "p2": {
            "text": "Dumbo is a small elephant.",
            "ulf": "((|Dumbo| ((pres be.v) (small.a elephant.n))) \\.)"
        },
        "q": {
            "text": "Is Dumbo a small animal?"
        },
        "h": {
            "text": "Dumbo is a small animal.",
            "ulf": "((|Dumbo| ((pres be.v) (small.a animal.n))) \\.)"
        },
        "a": "No",
        "group": "Adjective"
    },
    {
        "id": "212",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All mice are small animals.",
            "ulf": "(((All.d (plur mouse.n)) ((pres be.v)\n    (small.a (plur animal.n)))) \\.)"
        },
        "p2": {
            "text": "All elephants are large animals.",
            "ulf": "(((All.d (plur elephant.n)) ((pres be.v)\n    (large.a (plur animal.n)))) \\.)"
        },
        "p3": {
            "text": "Mickey is a large mouse.",
            "ulf": "((|Mickey| ((pres be.v) (large.a mouse.n))) \\.)"
        },
        "p4": {
            "text": "Dumbo is a small elephant.",
            "ulf": "((|Dumbo| ((pres be.v) (small.a elephant.n))) \\.)"
        },
        "q": {
            "text": "Is Dumbo larger than Mickey?"
        },
        "h": {
            "text": "Dumbo is larger than Mickey.",
            "ulf": "(((|Dumbo| (pres be.v) (degree1 large.a))\n more-than (|Mickey| (pres be.v) (degree2 large.a))) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "213",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "All mice are small animals.",
            "ulf": "(((All.d (plur mouse.n)) ((pres be.v)\n    (small.a (plur animal.n)))) \\.)"
        },
        "p2": {
            "text": "Mickey is a large mouse.",
            "ulf": "((|Mickey| ((pres be.v) (large.a mouse.n))) \\.)"
        },
        "q": {
            "text": "Is Mickey small?"
        },
        "h": {
            "text": "Mickey is small.",
            "ulf": "((|Mickey| ((pres be.v) small.a)) \\.)"
        },
        "a": "??: Yes for a mouse; ?? No for an animal",
        "group": "Adjective"
    },
    {
        "id": "214",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "All legal authorities are law lecturers.",
            "ulf": "(((All.d (legal.a (plur authority.n)))\n  ((pres be.v) (k (law.n (plur lecturer.n))))) \\.)"
        },
        "p2": {
            "text": "All law lecturers are legal authorities.",
            "ulf": "(((All.d (law.n (plur lecturer.n)))\n  ((pres be.v) (k (legal.a (plur authority.n))))) \\.)"
        },
        "q": {
            "text": "Are all fat legal authorities fat law lecturers?"
        },
        "h": {
            "text": "All fat legal authorities are fat law lecturers.",
            "ulf": "(((All.d ((fat.a legal.a) (plur authority.n)))\n  ((pres be.v) (k (fat.a (law.n (plur lecturer.n)))))) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "215",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "All legal authorities are law lecturers.",
            "ulf": "(((All.d (legal.a (plur authority.n)))\n  ((pres be.v) (k (law.n (plur lecturer.n))))) \\.)"
        },
        "p2": {
            "text": "All law lecturers are legal authorities.",
            "ulf": "(((All.d (law.n (plur lecturer.n)))\n  ((pres be.v) (k (legal.a (plur authority.n))))) \\.)"
        },
        "q": {
            "text": "Are all competent legal authorities competent law lecturers?"
        },
        "h": {
            "text": "All competent legal authorities are competent law lecturers.",
            "ulf": "(((All.d ((competent.a legal.a) (plur authority.n)))\n  ((pres be.v) (k (competent.a\n     (law.n (plur lecturer.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "216",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "John is a fatter politician than Bill.",
            "ulf": "()"
        },
        "q": {
            "text": "Is John fatter than Bill?"
        },
        "h": {
            "text": "John is fatter than Bill.",
            "ulf": "((|John| (pres be.v) (degree1 fat.a))\n    more-than (|Bill| (pres be.v) (degree2 fat.a)) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "217",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "John is a cleverer politician than Bill.",
            "ulf": "()"
        },
        "q": {
            "text": "Is John cleverer than Bill?"
        },
        "h": {
            "text": "John is cleverer than Bill.",
            "ulf": "((|John| (pres be.v) (degree1 clever.a))\n    more-than (|Bill| (pres be.v) (degree2 clever.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "218",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Kim is a clever person.",
            "ulf": "((|Kim| ((pres be.v)\n    (clever.a person.n))) \\.)"
        },
        "q": {
            "text": "Is Kim clever?"
        },
        "h": {
            "text": "Kim is clever.",
            "ulf": "((|Kim| ((pres be.v)\n    clever.a)) \\.)"
        },
        "a": "Yes",
        "group": "Adjective"
    },
    {
        "id": "219",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Kim is a clever politician.",
            "ulf": "((|Kim| ((pres be.v)\n    (clever.a politician.n))) \\.)"
        },
        "q": {
            "text": "Is Kim clever?"
        },
        "h": {
            "text": "Kim is clever.",
            "ulf": "((|Kim| ((pres be.v)\n    clever.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Adjective"
    },
    {
        "id": "220",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-XZ.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "q": {
            "text": "Is the PC-6082 fast?"
        },
        "h": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "221",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-XZ.",
            "ulf": "(((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "q": {
            "text": "Is the PC-6082 fast?"
        },
        "h": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v)\n    fast.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "222",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-XZ.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) fast.a)) \\.)"
        },
        "q": {
            "text": "Is the ITEL-XZ fast?"
        },
        "h": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "223",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-XZ.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The PC-6082 is slow.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) slow.a)) \\.)"
        },
        "q": {
            "text": "Is the ITEL-XZ fast?"
        },
        "h": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "No",
        "group": "Comparative"
    },
    {
        "id": "224",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "q": {
            "text": "Is the PC-6082 fast?"
        },
        "h": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "225",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "(((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "q": {
            "text": "Is the PC-6082 fast?"
        },
        "h": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "226",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "The PC-6082 is fast.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) fast.a)) \\.)"
        },
        "q": {
            "text": "Is the ITEL-XZ fast?"
        },
        "h": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "227",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "The PC-6082 is slow.",
            "ulf": "(((The.d |PC-6082|.n) ((pres be.v) slow.a)) \\.)"
        },
        "q": {
            "text": "Is the ITEL-XZ fast?"
        },
        "h": {
            "text": "The ITEL-XZ is fast.",
            "ulf": "(((The.d |ITEL-XZ|.n) ((pres be.v) fast.a)) \\.)"
        },
        "a": "No",
        "group": "Comparative"
    },
    {
        "id": "228",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "(((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-XZ?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-XZ.",
            "ulf": "(((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "229",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is as fast as the ITEL-XZ.",
            "ulf": "()"
        },
        "q": {
            "text": "Is the PC-6082 slower than the ITEL-XZ?"
        },
        "h": {
            "text": "The PC-6082 is slower than the ITEL-XZ.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Comparative"
    },
    {
        "id": "230",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM did.",
            "ulf": "()"
        },
        "q": {
            "text": "Did ITEL win some orders?"
        },
        "h": {
            "text": "ITEL won some orders.",
            "ulf": "((|ITEL| ((past win.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "231",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM did.",
            "ulf": "()"
        },
        "q": {
            "text": "Did APCOM win some orders?"
        },
        "h": {
            "text": "APCOM won some orders.",
            "ulf": "((|APCOM| ((past win.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "232",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM did.",
            "ulf": "(((|ITEL| (past win.v)\n     ((nquan (degree1 many.a)) (plur order.n)))"
        },
        "p2": {
            "text": "APCOM won ten orders.",
            "ulf": "((|APCOM| ((past win.v)\n   ((nquan ten.a) (plur order.n)))) \\.)"
        },
        "q": {
            "text": "Did ITEL win at least eleven orders?"
        },
        "h": {
            "text": "ITEL won at least eleven orders.",
            "ulf": "((|ITEL| ((past win.v) ((nquan (at_least.adv-a eleven.a))\n    (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "233",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM.",
            "ulf": "()"
        },
        "q": {
            "text": "Did ITEL win some orders?"
        },
        "h": {
            "text": "ITEL won some orders.",
            "ulf": "((|ITEL| ((past win.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "234",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM.",
            "ulf": "()"
        },
        "q": {
            "text": "Did APCOM win some orders?"
        },
        "h": {
            "text": "APCOM won some orders.",
            "ulf": "((|APCOM| ((past win.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "235",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM.",
            "ulf": "(((|ITEL| (past win.v) ((nquan (degree1 many.a))\n     (plur order.n))) more-than\n  (|APCOM| ((past win.v) ((nquan (degree2 many.a))\n     (plur order.n))))) \\.)"
        },
        "p2": {
            "text": "APCOM won ten orders.",
            "ulf": "((|APCOM| ((past win.v)\n   ((nquan ten.a) (plur order.n)))) \\.)"
        },
        "q": {
            "text": "Did ITEL win at least eleven orders?"
        },
        "h": {
            "text": "ITEL won at least eleven orders.",
            "ulf": "((|ITEL| ((past win.v) ((nquan (at_least.adv-a eleven.a))\n    (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "236",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than the APCOM contract.",
            "ulf": "()"
        },
        "q": {
            "text": "Did ITEL win the APCOM contract?"
        },
        "h": {
            "text": "ITEL won the APCOM contract.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d (contract-of.n |APCOM|)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "237",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than the APCOM contract.",
            "ulf": "()"
        },
        "q": {
            "text": "Did ITEL win more than one order?"
        },
        "h": {
            "text": "ITEL won more than one order.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "238",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won twice as many orders than APCOM.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "APCOM won ten orders.",
            "ulf": "((|APCOM| ((past win.v)\n   ((nquan ten.a) (plur order.n)))) \\.)"
        },
        "q": {
            "text": "Did ITEL win twenty orders?"
        },
        "h": {
            "text": "ITEL won twenty orders.",
            "ulf": "((|ITEL| ((past win.v)\n   ((nquan twenty.a) (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "239",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM lost.",
            "ulf": "()"
        },
        "q": {
            "text": "Did ITEL win some orders?"
        },
        "h": {
            "text": "ITEL won some orders.",
            "ulf": "((|ITEL| ((past win.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "240",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM lost.",
            "ulf": "()"
        },
        "q": {
            "text": "Did APCOM lose some orders?"
        },
        "h": {
            "text": "APCOM lost some orders.",
            "ulf": "((|APCOM| ((past lose.v)\n    (some.d (plur order.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "241",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won more orders than APCOM lost.",
            "ulf": "(((|ITEL| (past win.v) ((nquan (degree1 many.a))\n     (plur order.n))) more-than\n  (|APCOM| ((past lose.v) ((nquan (degree2 many.a))\n     (plur order.n))))) \\.)"
        },
        "p2": {
            "text": "APCOM lost ten orders.",
            "ulf": "((|APCOM| ((past lose.v)\n   ((nquan ten.a) (plur order.n)))) \\.)"
        },
        "q": {
            "text": "Did ITEL win at least eleven orders?"
        },
        "h": {
            "text": "ITEL won at least eleven orders.",
            "ulf": "((|ITEL| ((past win.v) ((nquan (at_least.adv-a eleven.a))\n    (plur order.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "242",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than 500 MIPS.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The ITEL-ZX is slower than 500 MIPS.",
            "ulf": "((((The.d |ITEL-ZX|.n) (pres be.v) (degree1 fast.a))"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "243",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL sold 3000 more computers than APCOM.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "APCOM sold exactly 2500 computers.",
            "ulf": "((|APCOM| ((past sell.v)\n    ((fquan (exactly.adv-a 2500.a))\n        (plur computer.n)))) \\.)"
        },
        "q": {
            "text": "Did ITEL sell 5500 computers?"
        },
        "h": {
            "text": "ITEL sold 5500 computers.",
            "ulf": "((|ITEL| ((past sell.v)\n    ((nquan 5500.a) (plur computer.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "244",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "APCOM has a more important customer than ITEL.",
            "ulf": "()"
        },
        "q": {
            "text": "Does APCOM have a more important customer than ITEL is?"
        },
        "h": {
            "text": "APCOM has a more important customer than ITEL is.",
            "ulf": "()"
        },
        "a": "Yes, on one reading of the premise",
        "group": "Comparative"
    },
    {
        "id": "245",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "APCOM has a more important customer than ITEL.",
            "ulf": "()"
        },
        "q": {
            "text": "Does APCOM has a more important customer than ITEL has?"
        },
        "h": {
            "text": "APCOM has a more important customer than ITEL has.",
            "ulf": "()"
        },
        "a": "Yes, on one reading of the premise",
        "group": "Comparative"
    },
    {
        "id": "246",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than every ITEL computer.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The ITEL-ZX is an ITEL computer.",
            "ulf": "(((The.d |ITEL-ZX|.n) ((pres be.v)\n    (|ITEL|.n computer.n))) \\.)"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "247",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than some ITEL computer.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The ITEL-ZX is an ITEL computer.",
            "ulf": "(((The.d |ITEL-ZX|.n) ((pres be.v)\n    (|ITEL|.n computer.n))) \\.)"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "a": "Don't know",
        "group": "Comparative"
    },
    {
        "id": "248",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than any ITEL computer.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "p2": {
            "text": "The ITEL-ZX is an ITEL computer.",
            "ulf": "(((The.d |ITEL-ZX|.n) ((pres be.v)\n    (|ITEL|.n computer.n))) \\.)"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "((((The.d |PC-6082|.n) (pres be.v) (degree1 fast.a))"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "249",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-ZX and the ITEL-ZY.",
            "ulf": "()"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Comparative"
    },
    {
        "id": "250",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "The PC-6082 is faster than the ITEL-ZX or the ITEL-ZY.",
            "ulf": "()"
        },
        "q": {
            "text": "Is the PC-6082 faster than the ITEL-ZX?"
        },
        "h": {
            "text": "The PC-6082 is faster than the ITEL-ZX.",
            "ulf": "()"
        },
        "a": "Yes, on one reading of the premise",
        "group": "Comparative"
    },
    {
        "id": "251",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL has a factory in Birmingham.",
            "ulf": "((|ITEL| ((pres have.v)\n    (a.d factory.n)\n    (adv-e (in.p |Birmingham|)))) \\.)"
        },
        "q": {
            "text": "Does ITEL currently have a factory in Birmingham?"
        },
        "h": {
            "text": "ITEL currently has a factory in Birmingham.",
            "ulf": "((|ITEL| (currently.adv-s (pres have.v)\n    (a.d factory.n)\n    (adv-e (in.p |Birmingham|)))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "252",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Since 1992 ITEL has been in Birmingham.",
            "ulf": "(((adv-e (since.p ($ date-time 1992)))\n    (|ITEL| ((pres perf) (be.v\n       (in.p |Birmingham|))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Was ITEL in Birmingham in 1993?"
        },
        "h": {
            "text": "Itel was in Birmingham in 1993.",
            "ulf": "((|Itel| (((past be.v) (in.p |Birmingham|)) \n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "253",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL has developed a new editor since 1992.",
            "ulf": "((|ITEL| (((pres have.v) (develop.v\n    (a.d (new.a editor.n))))\n       (adv-e (since.p ($ date-time 1992))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Did ITEL develop a new editor in 1993?"
        },
        "h": {
            "text": "ITEL developed a new editor in 1993.",
            "ulf": "((|ITEL| (((past develop.v) (a.d (new.a editor.n)))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "254",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL has expanded since 1992.",
            "ulf": "((|ITEL| (((pres have.v) expand.v)\n       (adv-e (since.p ($ date-time 1992))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Did ITEL expand in 1993?"
        },
        "h": {
            "text": "ITEL expanded in 1993.",
            "ulf": "((|ITEL| ((past expand.v)\n       (adv-e (since.p ($ date-time 1993))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "255",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Since 1992 ITEL has made a loss.",
            "ulf": "(((adv-e (since.p ($ date-time 1992)))\n    (|ITEL| ((pres perf) (make.v\n       (a.d loss.n))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Did ITEL make a loss in 1993?"
        },
        "h": {
            "text": "ITEL made a loss in 1993.",
            "ulf": "((|ITEL| (((past make.v)  (a.d loss.n))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "256",
        "answer": "unknown",
        "nonstandard": true,
        "p1": {
            "text": "ITEL has made a loss since 1992.",
            "ulf": "((|ITEL| ((((pres perf) make.v) (a.d loss.n))\n    (adv-e (since.p ($ date-time 1992))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Did ITEL make a loss in 1993?"
        },
        "h": {
            "text": "ITEL made a loss in 1993.",
            "ulf": "((|ITEL| (((past make.v)  (a.d loss.n))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Don't know, on one reading of the premise",
        "group": "Temporal"
    },
    {
        "id": "257",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "ITEL has made a loss since 1992.",
            "ulf": "((|ITEL| ((((pres perf) make.v) (a.d loss.n))\n    (adv-e (since.p ($ date-time 1992))))) \\.)"
        },
        "p2": {
            "text": "It is now 1996.",
            "ulf": "((It.pro ((pres be.v) (now.adv-s ($ date-time 1996)))) \\.)"
        },
        "q": {
            "text": "Did ITEL make a loss in 1993?"
        },
        "h": {
            "text": "ITEL made a loss in 1993.",
            "ulf": "((|ITEL| (((past make.v)  (a.d loss.n))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Yes, on one reading of the premise",
        "group": "Temporal"
    },
    {
        "id": "258",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "In March 1993 APCOM founded ITEL.",
            "ulf": "(((adv-e (In.p ($ date-time 1993 3)))"
        },
        "q": {
            "text": "Did ITEL exist in 1992?"
        },
        "h": {
            "text": "ITEL existed in 1992.",
            "ulf": "((|ITEL| ((past exist.v)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "259",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "The conference started on July 4th, 1994.",
            "ulf": "(((The.d conference.n) ((past start.v)\n    (adv-e (on.p ($ date-time 1994 7 4))))) \\.)"
        },
        "p2": {
            "text": "It lasted 2 days.",
            "ulf": "(???)"
        },
        "q": {
            "text": "Was the conference over on July 8th, 1994?"
        },
        "h": {
            "text": "The conference was over on July 8th, 1994.",
            "ulf": "(((The.d conference.n) (((past be.v) over.adv-???)\n    (adv-e (on.p ($ date-time 1994 7 8))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "260",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Yesterday APCOM signed the contract.",
            "ulf": "((Yesterday.adv-e (|APCOM| ((past sign.v)\n    (the.d contract.n)))) \\.)"
        },
        "p2": {
            "text": "Today is Saturday, July 14th.",
            "ulf": "(???)"
        },
        "q": {
            "text": "Did APCOM sign the contract Friday, 13th.?"
        },
        "h": {
            "text": "APCOM signed the contract Friday, 13th.",
            "ulf": "((|APCOM| (((past sign.v) (the.d contract.n))\n    ($ date-time ???))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "261",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith left before Jones left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (beore.pr (|Jones| (past leave.v))))) \\.)"
        },
        "p2": {
            "text": "Jones left before Anderson left.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (beore.pr (|Anderson| (past leave.v))))) \\.)"
        },
        "q": {
            "text": "Did Smith leave before Anderson left?"
        },
        "h": {
            "text": "Smith left before Anderson left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (beore.pr (|Anderson| (past leave.v))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "262",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith left after Jones left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (after.pr (|Jones| (past leave.v))))) \\.)"
        },
        "p2": {
            "text": "Jones left after Anderson left.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (after.pr (|Anderson| (past leave.v))))) \\.)"
        },
        "q": {
            "text": "Did Smith leave after Anderson left?"
        },
        "h": {
            "text": "Smith left after Anderson left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (after.pr (|Anderson| (past leave.v))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "263",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was present after Jones left.",
            "ulf": "(((|Smith| ((past be.v) present.a))\n    (adv-e (after.pr (|Jones| (past leave.v))))) \\.)"
        },
        "p2": {
            "text": "Jones left after Anderson was present.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (after.pr (|Anderson|\n       ((past be.v) present.a))))) \\.)"
        },
        "q": {
            "text": "Was Smith present after Anderson was present?"
        },
        "h": {
            "text": "Smith was present after Anderson was present.",
            "ulf": "(((|Smith| ((past be.v) present.a))\n    (adv-e (after.pr (|Anderson|\n       ((past be.v) present.a))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "264",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith left.",
            "ulf": "((|Smith| (past leave.v)) \\.)"
        },
        "p2": {
            "text": "Jones left.",
            "ulf": "((|Jones| (past leave.v)) \\.)"
        },
        "p3": {
            "text": "Smith left before Jones left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (beore.pr (|Jones| (past leave.v))))) \\.)"
        },
        "q": {
            "text": "Did Jones leave after Smith left?"
        },
        "h": {
            "text": "Jones left after Smith left.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (after.pr (|Smith| (past leave.v))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "265",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith left.",
            "ulf": "((|Smith| (past leave.v)) \\.)"
        },
        "p2": {
            "text": "Jones left.",
            "ulf": "((|Jones| (past leave.v)) \\.)"
        },
        "p3": {
            "text": "Smith left after Jones left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (after.pr (|Jones| (past leave.v))))) \\.)"
        },
        "q": {
            "text": "Did Jones leave before Smith left?"
        },
        "h": {
            "text": "Jones left before Smith left.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (beore.pr (|Smith| (past leave.v))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "266",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith left.",
            "ulf": "((|Smith| (past leave.v)) \\.)"
        },
        "p2": {
            "text": "Jones left.",
            "ulf": "((|Jones| (past leave.v)) \\.)"
        },
        "p3": {
            "text": "Jones left before Smith left.",
            "ulf": "(((|Jones| (past leave.v))\n    (adv-e (beore.pr (|Smith| (past leave.v))))) \\.)"
        },
        "q": {
            "text": "Did Smith leave after Jones left?"
        },
        "h": {
            "text": "Smith left after Jones left.",
            "ulf": "(((|Smith| (past leave.v))\n    (adv-e (after.pr (|Jones| (past leave.v))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "267",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Jones revised the contract.",
            "ulf": "((|Jones| ((past revise.v) (the.d contract.n))) \\.)"
        },
        "p2": {
            "text": "Smith revised the contract.",
            "ulf": "((|Smith| ((past revise.v) (the.d contract.n))) \\.)"
        },
        "p3": {
            "text": "Jones revised the contract before Smith did.",
            "ulf": "(((|Jones| ((past revise.v) (the.d contract.n)))\n    (adv-e (before.pr (|Smith| (past do.aux-v)"
        },
        "q": {
            "text": "Did Smith revise the contract after Jones did?"
        },
        "h": {
            "text": "Smith revised the contract after Jones did.",
            "ulf": "(((|Smith| ((past revise.v) (the.d contract.n)))\n    (adv-e (after.pr (|Jones| (past do.aux-v)\n       {(revise.v (the.d contract.n))})))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "268",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Jones revised the contract.",
            "ulf": "((|Jones| ((past revise.v) (the.d contract.n))) \\.)"
        },
        "p2": {
            "text": "Smith revised the contract.",
            "ulf": "((|Smith| ((past revise.v) (the.d contract.n))) \\.)"
        },
        "p3": {
            "text": "Jones revised the contract after Smith did.",
            "ulf": "(((|Jones| ((past revise.v) (the.d contract.n)))\n    (adv-e (after.pr (|Smith| (past do.aux-v)"
        },
        "q": {
            "text": "Did Smith revise the contract before Jones did?"
        },
        "h": {
            "text": "Smith revised the contract before Jones did.",
            "ulf": "(((|Smith| ((past revise.v) (the.d contract.n)))\n    (adv-e (before.pr (|Jones| (past do.aux-v)\n       {(revise.v (the.d contract.n))})))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "269",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith swam.",
            "ulf": "((|Smith| (past swim.v)) \\.)"
        },
        "p2": {
            "text": "Jones swam.",
            "ulf": "((|Jones| (past swim.v)) \\.)"
        },
        "p3": {
            "text": "Smith swam before Jones swam.",
            "ulf": "(((|Smith| (past swim.v)) (adv-e (before.pr\n    (|Jones| (past swim.v))))) \\.)"
        },
        "q": {
            "text": "Did Jones swim after Smith swam?"
        },
        "h": {
            "text": "Jones swam after Smith swam.",
            "ulf": "(((|Jones| (past swim.v)) (adv-e (after.pr\n    (|Smith| (past swim.v))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "270",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith swam to the shore.",
            "ulf": "(???)"
        },
        "p2": {
            "text": "Jones swam to the shore.",
            "ulf": "(???)"
        },
        "p3": {
            "text": "Smith swam to the shore before Jones swam to the shore.",
            "ulf": "(???)"
        },
        "q": {
            "text": "Did Jones swim to the shore after Smith swam to the shore?"
        },
        "h": {
            "text": "Jones swam to the shore after Smith swam to the shore.",
            "ulf": "(???)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "271",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was present.",
            "ulf": "((|Smith| ((past be.v) present.a)) \\.)"
        },
        "p2": {
            "text": "Jones was present.",
            "ulf": "((|Jones| ((past be.v) present.a)) \\.)"
        },
        "p3": {
            "text": "Smith was present after Jones was present.",
            "ulf": "(((|Smith| ((past be.v) present.a)) (adv-e (after.pr\n    (|Jones| ((past be.v) present.a))))) \\.)"
        },
        "q": {
            "text": "Was Jones present before Smith was present?"
        },
        "h": {
            "text": "Jones was present before Smith was present.",
            "ulf": "(((|Jones| ((past be.v) present.a)) (adv-e (before.pr\n    (|Smith| ((past be.v) present.a))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "272",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was present.",
            "ulf": "((|Smith| ((past be.v) present.a)) \\.)"
        },
        "p2": {
            "text": "Jones was present.",
            "ulf": "((|Jones| ((past be.v) present.a)) \\.)"
        },
        "p3": {
            "text": "Smith was present before Jones was present.",
            "ulf": "(((|Smith| ((past be.v) present.a)) (adv-e (before.pr\n    (|Jones| ((past be.v) present.a))))) \\.)"
        },
        "q": {
            "text": "Was Jones present after Smith was present?"
        },
        "h": {
            "text": "Jones was present after Smith was present.",
            "ulf": "(((|Jones| ((past be.v) present.a)) (adv-e (after.pr\n    (|Smith| ((past be.v) present.a))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "273",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was writing a report.",
            "ulf": "((|Smith| ((past prog) (write.v (a.d report.n)))) \\.)"
        },
        "p2": {
            "text": "Jones was writing a report.",
            "ulf": "((|Jones| ((past prog) (write.v (a.d report.n)))) \\.)"
        },
        "p3": {
            "text": "Smith was writing a report before Jones was writing a report.",
            "ulf": "(((|Smith| ((past prog) (write.v (a.d report.n))))\n    (adv-e (before.pr\n       (|Jones| ((past prog)\n          (write.v (a.d report.n))))))) \\.)"
        },
        "q": {
            "text": "Was Jones writing a report after Smith was writing a report.?"
        },
        "h": {
            "text": "Jones was writing a report after Smith was writing a report.",
            "ulf": "(((|Jones| ((past prog) (write.v (a.d report.n))))\n    (adv-e (after.pr\n       (|Smith| ((past prog)\n          (write.v (a.d report.n))))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "274",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was writing a report.",
            "ulf": "((|Smith| ((past prog) (write.v (a.d report.n)))) \\.)"
        },
        "p2": {
            "text": "Jones was writing a report.",
            "ulf": "((|Jones| ((past prog) (write.v (a.d report.n)))) \\.)"
        },
        "p3": {
            "text": "Smith was writing a report after Jones was writing a report.",
            "ulf": "(((|Smith| ((past prog) (write.v (a.d report.n))))\n    (adv-e (after.pr\n       (|Jones| ((past prog)\n          (write.v (a.d report.n))))))) \\.)"
        },
        "q": {
            "text": "Was Jones writing a report before Smith was writing a report?"
        },
        "h": {
            "text": "Jones was writing a report before Smith was writing a report.",
            "ulf": "(((|Jones| ((past prog) (write.v (a.d report.n))))\n    (adv-e (before.pr\n       (|Smith| ((past prog)\n          (write.v (a.d report.n))))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "275",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith left the meeting before he lost his temper.",
            "ulf": "((|Smith| ((past leave.v)\n    (the.d meeting.n)\n    (adv-e (before.ps\n        (he.pro ((past lose.v)\n            (the.d ((poss-by he.pro) temper.n)))))))) \\.)"
        },
        "q": {
            "text": "Did Smith lose his temper?"
        },
        "h": {
            "text": "Smith lost his temper.",
            "ulf": "((|Smith| ((past lose.v)\n    (the.d ((poss-by |Smith|) temper.n)))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "276",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "When they opened the M25, traffic increased.",
            "ulf": "(((When.md (they.pro ((past open.v)\n    (the.d |M25|.n))))"
        },
        "q": {
            "text": null
        },
        "h": {
            "text": null,
            "ulf": "()"
        },
        "a": null,
        "group": "Temporal"
    },
    {
        "id": "277",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith lived in Birmingham in 1991.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith live in Birmingham in 1992?"
        },
        "h": {
            "text": "Smith lived in Birmingham in 1992.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "278",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote his first novel in 1991.",
            "ulf": "((|Smith| ((past write.v)\n    (the.d ((poss-by |Smith|) (first.a (novel-of.n *s))))\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith write his first novel in 1992?"
        },
        "h": {
            "text": "Smith wrote his first novel in 1992.",
            "ulf": "((|Smith| ((past write.v)\n    (the.d ((poss-by |Smith|) (first.a (novel-of.n *s))))\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "279",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a novel in 1991.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d novel.n)\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith write it in 1992?"
        },
        "h": {
            "text": "Smith wrote it in 1992.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d novel.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "280",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a novel in 1991.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d novel.n)\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith write a novel in 1992?"
        },
        "h": {
            "text": "Smith wrote a novel in 1992.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d novel.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "281",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was running a business in 1991.",
            "ulf": "((|Smith| (((past prog) run.v)\n    (a.d business.n)\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Was Smith running it in 1992?"
        },
        "h": {
            "text": "Smith was running it in 1992.",
            "ulf": "((|Smith| (((past prog) run.v)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "282",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith discovered a new species in 1991.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith discover it in 1992?"
        },
        "h": {
            "text": "Smith discovered it in 1992.",
            "ulf": "((|Smith| ((past discover.v)"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "283",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith discovered a new species in 1991.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (in.p ($ date-time 1991))))) \\.)"
        },
        "q": {
            "text": "Did Smith discover a new species in 1992?"
        },
        "h": {
            "text": "Smith discovered a new species in 1992.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "284",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report in two hours.",
            "ulf": "((|smith| (((past write.v) (a.d report.n))\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "p2": {
            "text": "Smith started writing the report at 8 am.",
            "ulf": "((|Smith| (((past start.v) (ka (write.v (the.d report.n))))\n    (adv-e (at.p ($ date-time - - - 8))))) \\.)"
        },
        "q": {
            "text": "Had Smith finished writing the report by 11 am?"
        },
        "h": {
            "text": "Smith had finished writing the report by 11 am.",
            "ulf": "((|Smith| ((((past perf) finish.v)\n    (ka (write.v (the.d report.n))))\n       (adv-e (by.p ($ date-time - - - 11))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "285",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report in two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend two hours writing the report?"
        },
        "h": {
            "text": "Smith spent two hours writing the report.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "286",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report in two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend more than two hours writing the report?"
        },
        "h": {
            "text": "Smith spent more than two hours writing the report.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "287",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report in two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith write a report in one hour?"
        },
        "h": {
            "text": "Smith wrote a report in one hour.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (in.p (one.d (plur hour.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "288",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report in two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith write a report?"
        },
        "h": {
            "text": "Smith wrote a report.",
            "ulf": "((|Smith| ((past write.v) (a.d report.n))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "289",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith discovered a new species in two hours.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend two hours discovering the new species?"
        },
        "h": {
            "text": "Smith spent two hours discovering the new species.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "290",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith discovered a new species in two hours.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith discover a new species?"
        },
        "h": {
            "text": "Smith discovered a new species.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n)))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "291",
        "answer": "yes",
        "nonstandard": true,
        "p1": {
            "text": "Smith discovered many new species in two hours.",
            "ulf": "((|Smith| ((past discover.v)\n    (many.d (new.a (plur species.n)))\n    (adv-e (in.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend two hours discovering new species?"
        },
        "h": {
            "text": "Smith spent two hours discovering new species.",
            "ulf": "()"
        },
        "a": "?Yes",
        "group": "Temporal"
    },
    {
        "id": "292",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was running his own business in two years.",
            "ulf": "((|Smith| (((past prog) run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (in.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend two years running his own business?"
        },
        "h": {
            "text": "Smith spent two years running his own business.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "293",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith was running his own business in two years.",
            "ulf": "((|Smith| (((past prog) run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (in.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith spend more than two years running his own business?"
        },
        "h": {
            "text": "Smith spent more than two years running his own business.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "294",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith was running his own business in two years.",
            "ulf": "((|Smith| (((past prog) run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (in.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith run his own business?"
        },
        "h": {
            "text": "Smith ran his own business.",
            "ulf": "((|Smith| ((past run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "295",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "In two years Smith owned a chain of businesses.",
            "ulf": "(((adv-e (In.p (two.d (plur year.n))))\n    (|Smith| ((past own.v)\n        (a.d (n+preds chain.n\n            (of.p (plur business.n))))))) \\.)"
        },
        "q": {
            "text": "Did Smith own a chain of business for two years?"
        },
        "h": {
            "text": "Smith owned a chain of business for two years.",
            "ulf": "((|Smith| ((past own.v)\n    (a.d (n+preds chain.n\n        (of.p business.n)))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "296",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "In two years Smith owned a chain of businesses.",
            "ulf": "(((adv-e (In.p (two.d (plur year.n))))\n    (|Smith| ((past own.v)\n        (a.d (n+preds chain.n\n            (of.p (plur business.n))))))) \\.)"
        },
        "q": {
            "text": "Did Smith own a chain of business for more than two years?"
        },
        "h": {
            "text": "Smith owned a chain of business for more than two years.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "297",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "In two years Smith owned a chain of businesses.",
            "ulf": "(((adv-e (In.p (two.d (plur year.n))))\n    (|Smith| ((past own.v)\n        (a.d (n+preds chain.n\n            (of.p (plur business.n))))))) \\.)"
        },
        "q": {
            "text": "Did Smith own a chain of business?"
        },
        "h": {
            "text": "Smith owned a chain of business.",
            "ulf": "((|Smith| ((past own.v)\n    (a.d (n+preds chain.n\n        (of.p business.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "298",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith lived in Birmingham for two years.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith live in Birmingham for a year?"
        },
        "h": {
            "text": "Smith lived in Birmingham for a year.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (for.p (a.d year.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "299",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "Smith lived in Birmingham for two years.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith live in Birmingham for exactly a year?"
        },
        "h": {
            "text": "Smith lived in Birmingham for exactly a year.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "300",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith lived in Birmingham for two years.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith live in Birmingham?"
        },
        "h": {
            "text": "Smith lived in Birmingham.",
            "ulf": "((|Smith| ((past live.v)\n    (adv-a (in.p |Birmingham|)))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "301",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith ran his own business for two years.",
            "ulf": "((|Smith| ((past run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith run his own business for a year?"
        },
        "h": {
            "text": "Smith ran his own business for a year.",
            "ulf": "((|Smith| ((past run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (for.p (a.d year.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "302",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith ran his own business for two years.",
            "ulf": "((|Smith| ((past run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s)))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith run his own business?"
        },
        "h": {
            "text": "Smith ran his own business.",
            "ulf": "((|Smith| ((past run.v)\n    (the.d ((poss-by |Smith|) (bussiness-of.n *s))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "303",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report for two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (for.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith write a report for an hour?"
        },
        "h": {
            "text": "Smith wrote a report for an hour.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (for.p (an.d hour.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "304",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith wrote a report for two hours.",
            "ulf": "((|Smith| ((past write.v)\n    (a.d report.n)\n    (adv-e (for.p (two.d (plur hour.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith write a report?"
        },
        "h": {
            "text": "Smith wrote a report.",
            "ulf": "((|Smith| ((past write.v) (a.d report.n))) \\.)"
        },
        "a": "Don't know",
        "group": "Temporal"
    },
    {
        "id": "305",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Smith discovered a new species for an hour.",
            "ulf": "((|Smith| ((past discover.v)\n    (a.d (new.a species.n))\n    (adv-e (for.p (an.d hour.n))))) \\.)"
        },
        "q": {
            "text": null
        },
        "h": {
            "text": null,
            "ulf": "()"
        },
        "a": null,
        "group": "Temporal"
    },
    {
        "id": "306",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith discovered new species for two years.",
            "ulf": "((|Smith| ((past discover.v)\n    (k (new.a (plur species.n)))\n    (adv-e (for.p (two.d (plur year.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith discover new species?"
        },
        "h": {
            "text": "Smith discovered new species.",
            "ulf": "((|Smith| ((past discover.v)\n    (k (new.a (plur species.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "307",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "In 1994 ITEL sent a progress report every month.",
            "ulf": "(((adv-e (In.p ($ date-time 1994)))\n    (|ITEL| ((past send.v)\n        (a.d (progress.n report.n))\n        (adv-f (every.d month.n))))) \\.)"
        },
        "q": {
            "text": "Did ITEL send a progress report in July 1994?"
        },
        "h": {
            "text": "ITEL sent a progress report in July 1994.",
            "ulf": "((|ITEL| ((past send.v)\n        (a.d (progress.n report.n))\n        (adv-e (in.p ($ date-time 1994 7))))) \\.)"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "308",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Smith wrote to a representative every week.",
            "ulf": "((|Smith| ((past write.v)\n    (adv-a (to.p (a.d representative.n)))\n    (adv-f (every.d week.n)))) \\.)"
        },
        "q": {
            "text": "Is there a representative that Smith wrote to every week?"
        },
        "h": {
            "text": "There is a representative that Smith wrote to every week.",
            "ulf": "(There.pro ((pres be.v)\n    (a.d representative.n)\n    (that (|Smith| ((past write.v))\n        (to.p *s))\n        (adv-f (every.d week.n)))) \\.)"
        },
        "a": "Yes on one scoping; unknown on another scoping",
        "group": "Temporal"
    },
    {
        "id": "309",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Smith left the house at a quarter past five.",
            "ulf": "()"
        },
        "p2": {
            "text": "She took a taxi to the station and caught the first train to Luxembourg.",
            "ulf": "()"
        },
        "q": {
            "text": null
        },
        "h": {
            "text": null,
            "ulf": "()"
        },
        "a": null,
        "group": "Temporal"
    },
    {
        "id": "310",
        "answer": "undef",
        "nonstandard": true,
        "p1": {
            "text": "Smith lost some files.",
            "ulf": "()"
        },
        "p2": {
            "text": "They were destroyed when her hard disk crashed.",
            "ulf": "()"
        },
        "q": {
            "text": null
        },
        "h": {
            "text": null,
            "ulf": "()"
        },
        "a": null,
        "group": "Temporal"
    },
    {
        "id": "311",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith had left the house at a quarter past five.",
            "ulf": "()"
        },
        "p2": {
            "text": "Then she took a taxi to the station.",
            "ulf": "()\nSmith left the house before she took a taxi to the station."
        },
        "q": {
            "text": "Did Smith leave the house before she took a taxi to the station?"
        },
        "h": {
            "text": "Smith left the house before she took a taxi to the station.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "312",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL always delivers reports late.",
            "ulf": "()"
        },
        "p2": {
            "text": "In 1993 ITEL delivered reports.",
            "ulf": "()\nITEL delivered reports late in 1993."
        },
        "q": {
            "text": "Did ITEL delivered reports late in 1993?"
        },
        "h": {
            "text": "ITEL delivered reports late in 1993.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "313",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "ITEL never delivers reports late.",
            "ulf": "()"
        },
        "p2": {
            "text": "In 1993 ITEL delivered reports.",
            "ulf": "()\nITEL delivered reports late in 1993."
        },
        "q": {
            "text": "Did ITEL delivered reports late in 1993?"
        },
        "h": {
            "text": "ITEL delivered reports late in 1993.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "314",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith arrived in Paris on the 5th of May, 1995.",
            "ulf": "()"
        },
        "p2": {
            "text": "Today is the 15th of May, 1995.",
            "ulf": "()"
        },
        "p3": {
            "text": "She is still in Paris.",
            "ulf": "()\nSmith was in Paris on the 7th of May, 1995."
        },
        "q": {
            "text": "Was Smith in Paris on the 7th of May, 1995?"
        },
        "h": {
            "text": "Smith was in Paris on the 7th of May, 1995.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "315",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "When Smith arrived in Katmandu she had been travelling for three days.",
            "ulf": "()"
        },
        "q": {
            "text": "Had Smith been travelling the day before she arrived in Katmandu?"
        },
        "h": {
            "text": "Smith had been travelling the day before she arrived in Katmandu.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "316",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Jones graduated in March and has been employed ever since.",
            "ulf": "()"
        },
        "p2": {
            "text": "Jones has been unemployed in the past.",
            "ulf": "()\nJones was unemployed at some time before he graduated."
        },
        "q": {
            "text": "Was Jones unemployed at some time before he graduated?"
        },
        "h": {
            "text": "Jones was unemployed at some time before he graduated.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "317",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Every representative has read this report.",
            "ulf": "()"
        },
        "p2": {
            "text": "No two representatives have read it at the same time.",
            "ulf": "()"
        },
        "p3": {
            "text": "No representative took less than half a day to read the report.",
            "ulf": "()"
        },
        "p4": {
            "text": "There are sixteen representatives.",
            "ulf": "()\nIt took the representatives more than a week to read the report."
        },
        "q": {
            "text": "Did it take the representatives more than a week to read the report?"
        },
        "h": {
            "text": "It took the representatives more than a week to read the report.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "318",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "While Jones was updating the program, Mary came in and told him about the board meeting.",
            "ulf": "()"
        },
        "p2": {
            "text": "She finished before he did.",
            "ulf": "()\nMary's story lasted as long as Jones's updating the program."
        },
        "q": {
            "text": "Did Mary's story last as long as Jones's updating the program?"
        },
        "h": {
            "text": "Mary's story lasted as long as Jones's updating the program.",
            "ulf": "()"
        },
        "a": "No",
        "group": "Temporal"
    },
    {
        "id": "319",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Before APCOM bought its present office building, it had been paying mortgage interest on the previous one for 8 years.",
            "ulf": "()"
        },
        "p2": {
            "text": "Since APCOM bought its present office building it has been paying mortgage interest on it for more than 10 years.",
            "ulf": "()\nAPCOM has been paying mortgage interest for a total of 15 years or more."
        },
        "q": {
            "text": "Has APCOM been paying mortgage interest for a total of 15 years or more?"
        },
        "h": {
            "text": "APCOM has been paying mortgage interest for a total of 15 years or more.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "320",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "When Jones got his job at the CIA, he knew that he would never be allowed to write his memoirs.",
            "ulf": "()"
        },
        "q": {
            "text": "Is it the case that Jones is not and will never be allowed to write his memoirs?"
        },
        "h": {
            "text": "It is the case that Jones is not and will never be allowed to write his memoirs.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "321",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith has been to Florence twice in the past.",
            "ulf": "()"
        },
        "p2": {
            "text": "Smith will go to Florence twice in the coming year.",
            "ulf": "()\nTwo years from now Smith will have been to Florence at least four times."
        },
        "q": {
            "text": "Two years from now will Smith have been to Florence at least four times?"
        },
        "h": {
            "text": "Two years from now Smith will have been to Florence at least four times.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "322",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Last week I already knew that when, in a month's time, Smith would discover that she had been duped she would be furious.",
            "ulf": "()"
        },
        "q": {
            "text": "Will it be the case that in a few weeks Smith will discover that she has been duped; and will she be furious?"
        },
        "h": {
            "text": "It will be the case that in a few weeks Smith will discover that she has been duped; and she will be furious.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "323",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "No one gambling seriously stops until he is broke.",
            "ulf": "()"
        },
        "p2": {
            "text": "No one can gamble when he is broke.",
            "ulf": "()\nEveryone who starts gambling seriously stops the moment he is broke."
        },
        "q": {
            "text": "Does everyone who starts gambling seriously stop the moment he is broke?"
        },
        "h": {
            "text": "Everyone who starts gambling seriously stops the moment he is broke.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "324",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "No one who starts gambling seriously stops until he is broke.",
            "ulf": "()"
        },
        "q": {
            "text": "Does everyone who starts gambling seriously continue until he is broke?"
        },
        "h": {
            "text": "Everyone who starts gambling seriously continues until he is broke.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "325",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Nobody who is asleep ever knows that he is asleep.",
            "ulf": "()"
        },
        "p2": {
            "text": "But some people know that they have been asleep after they have been asleep.",
            "ulf": "()\nSome people discover that they have been asleep."
        },
        "q": {
            "text": "Do some people discover that they have been asleep?"
        },
        "h": {
            "text": "Some people discover that they have been asleep.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Temporal"
    },
    {
        "id": "326",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL built MTALK in 1993.",
            "ulf": "((|ITEL| ((past build.v) |MTALK|\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "q": {
            "text": "Did ITEL finish MTALK in 1993?"
        },
        "h": {
            "text": "ITEL finished MTALK in 1993.",
            "ulf": "((|ITEL| ((past finish.v) |MTALK|\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "327",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL was building MTALK in 1993.",
            "ulf": "((|ITEL| (((past prog) build.v) |MTALK|\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "q": {
            "text": "Did ITEL finish MTALK in 1993?"
        },
        "h": {
            "text": "ITEL finished MTALK in 1993.",
            "ulf": "((|ITEL| ((past finish.v) |MTALK|\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Don't know",
        "group": "Verb"
    },
    {
        "id": "328",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL won the contract from APCOM in 1993.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-a (from.p |APCOM|))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win a contract in 1993?"
        },
        "h": {
            "text": "ITEL won a contract in 1993.",
            "ulf": "((|ITEL| ((past win.v)\n    (a.d contract.n)\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "329",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL was winning the contract from APCOM in 1993.",
            "ulf": "((|ITEL| (((past prog) win.v)\n    (the.d contract.n)\n    (adv-a (from.p |APCOM|))\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win a contract in 1993?"
        },
        "h": {
            "text": "ITEL won a contract in 1993.",
            "ulf": "((|ITEL| ((past win.v)\n    (a.d contract.n)\n    (adv-e (in.p ($ date-time 1993))))) \\.)"
        },
        "a": "Don't know",
        "group": "Verb"
    },
    {
        "id": "330",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL owned APCOM from 1988 to 1992.",
            "ulf": "((|ITEL| ((past own.v) |APCOM|\n    (adv-e (from.p ($ date-time 1988)))\n    (adv-e (to.p ($ date-time 1992))))) \\.)"
        },
        "q": {
            "text": "Did ITEL own APCOM in 1990?"
        },
        "h": {
            "text": "ITEL owned APCOM in 1990.",
            "ulf": "((|ITEL| ((past own.v) |APCOM|\n    (adv-e (in.p ($ date-time 1990))))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "331",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith and Jones left the meeting.",
            "ulf": "(((|Smith| and.cc |Jones|)\n    ((past leave.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did Smith leave the meeting?"
        },
        "h": {
            "text": "Smith left the meeting.",
            "ulf": "((|Smith| ((past leave.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "332",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith and Jones left the meeting.",
            "ulf": "(((|Smith| and.cc |Jones|)\n    ((past leave.v) (the.d meeting.n))) \\.)"
        },
        "q": {
            "text": "Did Jones leave the meeting?"
        },
        "h": {
            "text": "Jones left the meeting.",
            "ulf": "((|Jones| ((past leave.v) (the.d meeting.n))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "333",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith, Anderson and Jones met.",
            "ulf": "(((|Smith| \\, |Anderson| and.cc |Jones|)\n    (past met.v)) \\.)"
        },
        "q": {
            "text": "Was there a group of people that met?"
        },
        "h": {
            "text": "There was a group of people that met.",
            "ulf": "((There.pro ((past be.v)\n    (a.d (n+preds group.n (of.p (plur person.n))))\n    (that (past met.v)))) \\.)"
        },
        "a": "Yes",
        "group": "Verb"
    },
    {
        "id": "334",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith knew that ITEL had won the contract in 1992.",
            "ulf": "((|Smith| ((pres know.v) (that\n    ((|ITEL| (((past perf) win.v)\n        (the.d contract.n)\n        (adv-e (in.p ($ date-time 1992))))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n) (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "335",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith believed that ITEL had won the contract in 1992.",
            "ulf": "((|Smith| ((pres believe.v) (that\n    ((|ITEL| (((past perf) win.v)\n        (the.d contract.n)\n        (adv-e (in.p ($ date-time 1992))))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Don't know",
        "group": "Attitude"
    },
    {
        "id": "336",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "ITEL managed to win the contract in 1992.",
            "ulf": "((|ITEL| ((past manage.v) (to (win.v\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "337",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "ITEL tried to win the contract in 1992.",
            "ulf": "((|ITEL| ((past try.v) (to (win.v\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Don't know",
        "group": "Attitude"
    },
    {
        "id": "338",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "It is true that ITEL won the contract in 1992.",
            "ulf": "((It.pro ((pres be.v) true.n (that\n    ((|ITEL| ((past win.v)\n        (the.d contract.n)\n        (adv-e (in.p ($ date-time 1992))))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "339",
        "answer": "no",
        "nonstandard": false,
        "p1": {
            "text": "It is false that ITEL won the contract in 1992.",
            "ulf": "((It.pro ((pres be.v) false.n (that\n    ((|ITEL| ((past win.v)\n        (the.d contract.n)\n        (adv-e (in.p ($ date-time 1992))))))))) \\.)"
        },
        "q": {
            "text": "Did ITEL win the contract in 1992?"
        },
        "h": {
            "text": "ITEL won the contract in 1992.",
            "ulf": "((|ITEL| ((past win.v)\n    (the.d contract.n)\n    (adv-e (in.p ($ date-time 1992))))) \\.)"
        },
        "a": "No",
        "group": "Attitude"
    },
    {
        "id": "340",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract.",
            "ulf": "()"
        },
        "p2": {
            "text": "If Jones signed the contract, his heart was beating.",
            "ulf": "()\nSmith saw Jones' heart beat."
        },
        "q": {
            "text": "Did Smith see Jones' heart beat?"
        },
        "h": {
            "text": "Smith saw Jones' heart beat.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Attitude"
    },
    {
        "id": "341",
        "answer": "unknown",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract.",
            "ulf": "()"
        },
        "p2": {
            "text": "When Jones signed the contract, his heart was beating.",
            "ulf": "()\nSmith saw Jones' heart beat."
        },
        "q": {
            "text": "Did Smith see Jones' heart beat?"
        },
        "h": {
            "text": "Smith saw Jones' heart beat.",
            "ulf": "()"
        },
        "a": "Don't know",
        "group": "Attitude"
    },
    {
        "id": "342",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract.",
            "ulf": "((|Smith| ((past see.v) (tht\n    (|Jones| (sign.v\n        (the.d contract.n)))))) \\.)"
        },
        "q": {
            "text": "Did Jones sign the contract?"
        },
        "h": {
            "text": "Jones signed the contract.",
            "ulf": "((|Jones| ((past sign.v)\n    (the.d contract.n))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "343",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract.",
            "ulf": "()"
        },
        "p2": {
            "text": "Jones is the chairman of ITEL.",
            "ulf": "()\nSmith saw the chairman of ITEL sign the contract."
        },
        "q": {
            "text": "Did Smith see the chairman of ITEL sign the contract?"
        },
        "h": {
            "text": "Smith saw the chairman of ITEL sign the contract.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "344",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Helen saw the chairman of the department answer the phone.",
            "ulf": "()"
        },
        "p2": {
            "text": "The chairman of the department is a person.",
            "ulf": "()\nThere is someone whom Helen saw answer the phone."
        },
        "q": {
            "text": "Is there anyone whom Helen saw answer the phone?"
        },
        "h": {
            "text": "There is someone whom Helen saw answer the phone.",
            "ulf": "()"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "345",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract and his secretary make a copy.",
            "ulf": "((|Smith| (((past see.v)\n    (|Jones| (sign.v\n        (the.d contract.n)))\n    and.cc\n        ((the.d ((poss-by |Jones|) (secretary-of.n *s)))\n            (make.v (a.d copy.n)))))) \\.)"
        },
        "q": {
            "text": "Did Smith see Jones sign the contract?"
        },
        "h": {
            "text": "Smith saw Jones sign the contract.",
            "ulf": "((|Smith| ((past see.v)\n    (|Jones| (sign.v\n        (the.d contract.n))))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    },
    {
        "id": "346",
        "answer": "yes",
        "nonstandard": false,
        "p1": {
            "text": "Smith saw Jones sign the contract or cross out the crucial clause.",
            "ulf": "((|Smith| ((past see.v)\n    (|Jones|\n        ((sign.v\n            (the.d contract.n))\n        or.cc\n        (cross_out.v\n            (the.d (crucial.a clause.n))))))) \\.)"
        },
        "q": {
            "text": "Did Smith either see Jones sign the contract or see Jones cross out the crucial clause?"
        },
        "h": {
            "text": "Smith either saw Jones sign the contract or saw Jones cross out the crucial clause.",
            "ulf": "((|Smith|\n    (((past see.v)\n        (|Jones| (sign.v\n            (the.d contract.n))\n    or.cc\n    ((past see.v)\n        (|Jones| (cross_out.v\n            (the.d (crucial.a clause.n))))))))) \\.)"
        },
        "a": "Yes",
        "group": "Attitude"
    }
]